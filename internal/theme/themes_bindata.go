// Code generated by go-bindata.
// sources:
// themes/.DS_Store
// themes/comply-blank/README.md
// themes/comply-soc2/.DS_Store
// themes/comply-soc2/README.md
// themes/comply-soc2/narratives/README.md
// themes/comply-soc2/narratives/organizational.md
// themes/comply-soc2/policies/README.md
// themes/comply-soc2/policies/application.md
// themes/comply-soc2/policies/information.md
// themes/comply-soc2/policies/training.md
// themes/comply-soc2/procedures/README.md
// themes/comply-soc2/procedures/offboarding.md
// themes/comply-soc2/procedures/onboarding.md
// themes/comply-soc2/procedures/workstation.md
// themes/comply-soc2/standards/README.md
// themes/comply-soc2/standards/TSPC-2017.yml
// themes/comply-soc2/templates/default.latex
// themes/comply-soc2/templates/index.ace
// DO NOT EDIT!

package theme

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x31\x4a\xc6\x40\x10\x85\xdf\xac\x29\x16\xd2\x6c\x69\xb9\x17\xb0\xd0\x13\x2c\x21\x9e\xc0\x0b\x88\x49\x19\x59\x21\x58\xd8\xa5\xf2\x5c\x1e\x4d\xc2\x3e\x89\x92\x04\xd2\x88\xf1\xe7\x7d\xb0\x7c\x45\x66\x36\x21\xc5\xce\xcc\x02\xb0\xe6\xb5\xbf\x05\x02\x00\x8f\x62\xbc\x63\x13\xcf\xb5\xc2\xd1\x56\x56\x00\x06\xbc\xe1\x06\x23\x32\xba\xed\xbd\x56\xcc\xb9\x35\x3a\x64\x3c\xe3\xe5\x47\xfe\x5d\x3f\x76\xc3\x53\xce\x83\x1d\xdc\x4a\x08\x21\x84\x10\x07\x60\x61\xf5\xf5\x5f\x7f\x88\x10\xe2\x74\xcc\xe7\x43\xa4\x13\x3d\x15\x1b\x9f\x3b\xba\xfa\x96\x13\xe8\x48\x27\x7a\x2a\x36\xc6\x39\xba\xa2\x3d\x1d\xe8\x48\x27\x7a\x2a\xe6\xa1\x65\x1c\x3e\x8c\x6f\x36\x4e\x28\x16\xe8\x48\xa7\xdf\xf9\x37\x42\xfc\x77\xae\x8a\xc2\x5c\xff\xef\xf7\xe7\x7f\x21\xc4\x05\x63\x55\xfb\xd0\x36\xcb\x40\xb0\xc2\xb1\x11\x78\x64\xcc\xc7\x57\xe2\x4e\x23\xe0\xca\x85\xe1\x35\x96\x38\x35\x03\x42\x9c\x88\xcf\x00\x00\x00\xff\xff\xc4\x24\x93\x50\x04\x18\x00\x00")

func Ds_storeBytes() ([]byte, error) {
	return bindataRead(
		_Ds_store,
		".DS_Store",
	)
}

func Ds_store() (*asset, error) {
	bytes, err := Ds_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1521658406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\xce\xcf\x2d\xc8\xa9\xd4\x4d\xca\x49\xcc\xcb\xe6\x0a\xc9\x48\x55\x70\x06\x0b\x28\x14\x14\xe5\x67\xa5\x26\x97\x28\x14\x97\x14\x95\x26\x97\x94\x16\xa5\x2a\x94\x67\x96\x64\x28\xe4\xe5\x43\x74\x64\x26\xe6\x25\xa7\x2a\x14\xa5\xa6\x67\xe6\xa6\x16\x73\x01\x02\x00\x00\xff\xff\x0d\x8a\x5a\xf5\x47\x00\x00\x00")

func complyBlankReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankReadmeMd,
		"comply-blank/README.md",
	)
}

func complyBlankReadmeMd() (*asset, error) {
	bytes, err := complyBlankReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/README.md", size: 71, mode: os.FileMode(420), modTime: time.Unix(1521499879, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2Ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xd8\x31\x0a\x02\x31\x10\x85\xe1\x37\x31\x45\xc0\x26\xa5\x65\x1a\x0f\xe0\x0d\xc2\xb2\x9e\xc0\x0b\x58\x78\x05\xfb\x1c\x5d\x96\x79\x60\x60\xd5\x4e\x8c\xcb\xfb\x40\xfe\x05\x37\x2a\x16\x31\x23\x00\x9b\xee\xb7\x13\x90\x01\x24\x78\x71\xc4\x4b\x89\x8f\x95\xd0\x5d\x1b\x5f\x43\x44\x44\x44\xc6\x66\x9e\xb4\xff\xf5\x07\x11\x91\xe1\x2c\xfb\x43\x61\x2b\xdb\xbc\xc6\xe7\x03\x1b\xbb\x35\x99\x2d\x6c\x65\x9b\xd7\x78\x5f\x60\x23\x9b\xd8\xcc\x16\xb6\xb2\xcd\xcb\x4d\xcb\x38\x7c\x18\xdf\xd9\x38\xa1\x18\xa7\x10\x2b\x6c\xfd\xce\x77\x23\xf2\xef\x76\x9e\xbc\xfc\xfe\x9f\xdf\xcf\xff\x22\xb2\x61\x16\xe7\xcb\x3c\x3d\x07\x82\xf5\x0d\x00\xae\xdd\xf5\xa7\x43\x40\xf0\x3f\x0b\x0f\xdd\x5a\x1d\x04\x44\x06\xf3\x08\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func complySoc2Ds_storeBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2Ds_store,
		"comply-soc2/.DS_Store",
	)
}

func complySoc2Ds_store() (*asset, error) {
	bytes, err := complySoc2Ds_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1521658429, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xc1\x6e\xdb\x30\x0c\xbd\xeb\x2b\x08\xe4\x5a\x18\xb3\x9d\xc4\xed\x6e\x86\xb7\x43\x0f\xae\xb5\xa6\xdb\x5d\x93\x59\x87\xa8\x22\x19\x92\x9c\x2d\xfb\xfa\x81\x4a\x9c\xc6\x3b\xac\x17\x02\x22\xdf\x23\xf5\xf8\xb8\x82\x5d\xd7\x14\xf0\xf5\xb7\x3a\x8c\x06\xe1\xd5\x79\x88\x7b\x84\xc6\x1d\x46\x73\x82\xe8\x9c\x79\xa3\x28\xc4\xcb\x1e\x41\x3b\x1b\x15\x59\xec\xc1\x2a\xef\x55\xa4\x23\x86\x3b\x18\x9d\x21\x4d\x18\x40\xd9\x1e\x46\xef\x34\xf6\x93\xe7\xa7\x47\xe8\x31\xd0\xc0\x84\xe8\x40\xf5\xbd\xc7\x10\x52\x17\xef\x4c\x00\x15\x82\xd3\xa4\x22\xf6\xf0\x8b\xe2\x3e\x8d\xdd\xc0\x8b\x9f\x42\x84\x1d\xfa\x23\x69\x04\xe9\xc9\x6a\x1a\x0d\x86\xcf\x42\x40\x9e\xc1\x0e\xf5\xe4\x29\x9e\xd2\xa3\x3e\x2a\x32\xea\x27\x99\x39\x21\x79\x7c\x08\x64\x07\x20\x1b\x71\xb8\x22\x1b\x67\x5f\xa9\x47\x1b\x49\xdd\x80\xe9\xa8\xf4\x49\x88\x15\xab\x3d\x38\x0b\x8d\xa7\x88\x9e\xd4\x2c\x37\x25\xf5\x25\x99\x04\xc5\x94\xf7\x38\xab\xe0\xa4\x0a\x10\xf7\x2a\x42\x98\xc6\xd1\xf9\xf8\x81\x8e\x4c\x88\xd5\x0a\xba\x16\x3a\x3f\x28\x4b\x7f\x54\x24\x67\x85\x68\x9a\x3c\xcb\xef\x20\xcf\x0a\x0e\x25\x87\x35\x87\x4d\x82\x37\x5d\x9b\xfe\x38\x59\xd2\x89\x10\x98\x51\x30\xa3\x60\x46\x91\x95\x09\xf7\x5c\xc3\x33\x85\x37\xa8\xad\x32\xa7\x40\x09\x55\x32\xaa\x64\x54\xc9\x7d\xcb\x6c\x9d\xa0\x6d\xf7\x04\xad\xb3\x14\x9d\x27\x3b\x30\x70\xcd\xc0\x75\x56\x5c\x26\x3e\xf1\xd2\x58\xa3\x10\xcd\x86\x4b\x1b\xee\xb1\xb9\x4c\xda\x75\x50\x6b\xde\x35\x33\xb7\x5c\xde\x72\x79\xcb\x23\xb6\xfc\xf5\x6d\xb6\xe1\xb0\xe5\x50\x71\xb8\x3f\x0b\x97\x3b\xe8\x46\xf4\xef\x2a\x2a\x26\x57\x4c\xae\x98\x5c\x31\xb9\x9a\x75\xb7\xd0\xec\x95\x1d\x90\x81\xf7\x59\x7e\x16\xd9\x42\x4b\x91\x86\xeb\xe6\x1e\xb8\xc3\x43\xfa\x38\xd4\x3d\x71\x5a\x99\x1b\x33\x57\x2b\xa8\x7f\xd4\xcb\x6b\x11\xf5\x62\xdf\xb7\x9a\x17\x87\x22\xae\xbe\x24\x88\x7c\xbc\xbd\xb1\xc7\xeb\x8d\x09\xf9\xf8\x3f\xff\xe4\xf3\xfb\xb5\xc9\x3c\xfb\xc4\x95\xb3\x18\xd9\xcc\x15\x1e\x1d\xd0\x46\x21\x64\xc1\x88\x62\x46\x5c\xcb\xc6\xa0\x3e\x6b\x96\xb3\xa9\x0b\xc4\xf7\x80\x42\xc8\xd9\x46\x0e\xe5\xa2\x3e\x1b\x26\x67\x3b\x17\xd5\x2f\x14\xb4\x71\x61\xf2\xdc\xe4\x43\x47\x17\xd4\x6f\xd3\x65\x59\xb2\xfa\xe7\xd3\xb7\x17\x26\xef\xb3\xfc\x6f\x00\x00\x00\xff\xff\x7a\x35\x47\x2f\x6e\x04\x00\x00")

func complySoc2ReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ReadmeMd,
		"comply-soc2/README.md",
	)
}

func complySoc2ReadmeMd() (*asset, error) {
	bytes, err := complySoc2ReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/README.md", size: 1134, mode: os.FileMode(420), modTime: time.Unix(1521499892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func complySoc2NarrativesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesReadmeMd,
		"comply-soc2/narratives/README.md",
	)
}

func complySoc2NarrativesReadmeMd() (*asset, error) {
	bytes, err := complySoc2NarrativesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/README.md", size: 0, mode: os.FileMode(420), modTime: time.Unix(1520462109, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesOrganizationalMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xbf\x4e\xc3\x40\x0c\x06\xf0\xfd\x9e\xe2\x53\x99\x0f\x91\xf2\x67\xc8\x9a\x05\x24\xa0\x08\x58\x18\xcd\xc5\xb4\xa6\x17\x5b\xba\x73\x5b\x95\xa7\x47\xc9\x80\x6e\x61\xf2\x4f\x9f\x65\xcb\x56\x9a\xb8\xc7\x6a\x53\xb6\xa4\xf2\x43\x2e\xa6\x94\xf1\x4c\xa5\x90\xcb\x91\x57\xa1\x92\x4b\xfd\x12\xae\x7d\x00\xde\xdf\x5e\x86\xb9\x02\x11\xc3\xd0\x5d\x76\x8d\xd7\x8d\xaf\x1b\xdf\x34\xbe\x0d\x13\x7d\x5b\x79\xe5\xa3\x54\x31\x5d\x76\x46\x8c\xe4\xdc\x63\x93\x1c\x1d\xd6\x57\xdd\xdd\x32\x90\x6c\x9a\x58\xbd\xc7\x83\x8a\x0b\x65\x8c\x96\x0e\x73\x12\x62\x8c\x21\x5c\xe0\xbf\x93\x43\xb8\xe7\xc2\x38\x31\x74\x89\x18\xa7\xdd\x19\x76\x28\xb0\xb2\xc5\xdf\x3b\xf0\x1d\x23\x99\x7a\xb1\x8c\x3d\x9f\x2b\xb2\x54\xe7\x11\xa2\x4b\xeb\xe3\xe9\x11\x9f\xd9\xd2\xfe\x37\x00\x00\xff\xff\x82\x8d\x5f\xf5\x22\x01\x00\x00")

func complySoc2NarrativesOrganizationalMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesOrganizationalMd,
		"comply-soc2/narratives/organizational.md",
	)
}

func complySoc2NarrativesOrganizationalMd() (*asset, error) {
	bytes, err := complySoc2NarrativesOrganizationalMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/organizational.md", size: 290, mode: os.FileMode(420), modTime: time.Unix(1521236516, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xf1\x77\xf1\x57\x70\x49\x2d\x4e\x2e\xca\x4c\x4a\x55\x08\xc8\xcf\xc9\x4c\xce\x4c\x2d\x06\x04\x00\x00\xff\xff\x6e\xd7\x04\x8c\x18\x00\x00\x00")

func complySoc2PoliciesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesReadmeMd,
		"comply-soc2/policies/README.md",
	)
}

func complySoc2PoliciesReadmeMd() (*asset, error) {
	bytes, err := complySoc2PoliciesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/README.md", size: 24, mode: os.FileMode(420), modTime: time.Unix(1521158594, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesApplicationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x6f\x13\x31\x10\x85\xef\xfe\x15\xa3\xf6\x02\x11\x89\x48\x25\xa8\x94\x5b\x14\x10\xf4\x42\x2b\xb6\x12\x07\xc4\xc1\xb1\x67\xbb\x03\xf6\xcc\xca\x9e\xdd\xb0\xff\x1e\xd9\xa1\x65\x53\x91\x9e\x76\x35\x1a\xbf\xf7\xbd\x37\x6c\x23\x6e\xe0\x62\xeb\x22\xc2\xb6\xef\x03\x39\xab\x24\x0c\x0d\xba\x21\x91\x4e\x70\x27\x81\xdc\x74\x61\xac\x4b\xc2\x53\x2c\xbb\xcd\xdd\x85\xc9\x56\x29\xb7\x84\x79\x63\x00\xee\x9b\xbb\x5d\xf9\x02\x2c\x61\xb7\x5b\xaf\xae\x9e\xfe\xdf\xad\xd6\x67\xe7\xd1\xfe\x94\xf4\x15\x47\xca\x24\x5c\x75\x96\xe0\xad\xe2\x06\xbe\xc8\x08\xeb\x6b\xb8\x7a\xbb\xbe\xae\x2f\x9c\xc4\x88\xac\x1b\xf8\xc8\x9d\x65\x87\x1e\x3e\x58\xb5\xd0\x20\x67\x52\x1a\x0b\x66\x46\x57\xb8\x67\x22\xb7\x4e\x61\x5d\x34\xde\x9f\x6a\xdc\x30\x29\xd9\x00\x5e\xdc\x50\x26\x66\xb9\x5c\x1a\x73\x09\xb7\x23\xa6\x91\xf0\x60\xcc\x7d\xf7\x62\x17\xf0\x20\x23\x26\xce\xa0\x1d\xc2\x90\x11\xa4\x05\xfb\x6f\x3d\x83\x47\x8c\xe8\xc1\x25\x52\x72\x36\x80\x0a\xd4\x7e\x6f\xb8\x95\x14\x4f\x35\x57\xc5\x7a\xf7\xb8\x39\x73\xcd\x47\x8e\x56\x42\x90\x03\xf1\xc3\xa9\x85\x4d\x08\x07\xd2\x8e\xb8\x52\x64\x27\x7d\xe5\xd0\x8e\x32\xf4\x15\x73\x63\xcc\x02\x3e\x91\x7e\x1e\xf6\x66\x01\x4d\xb0\xee\x57\x19\x88\x3c\x84\x1a\x2f\x1b\x33\xb7\x83\x3c\xf4\xbd\x24\x2d\x56\x7d\x12\x3f\xd4\x3e\x4b\x97\x16\xa4\xc7\xf4\x77\xeb\x55\xee\xd1\x51\x5b\x68\xc3\x54\xbd\xb7\xdf\x1a\xd8\x09\x67\x09\xf8\xba\x72\x79\x0c\xb4\x2f\x0f\x30\x4c\x80\xbf\x5d\x18\x3c\x7a\x68\x93\xc4\x39\x5e\x0d\xfe\xfc\x8c\xc6\x6c\x79\x2a\xa7\xea\x2d\x4f\x05\xa3\x4f\x84\x6a\xd3\x74\xe4\x88\x76\x82\x3d\x42\x56\x49\xe8\x67\xf9\x33\xc2\xe2\xfb\x7f\x4b\xfc\xb1\x58\x19\xb3\x1b\xb2\x4a\xc4\xf4\x18\x11\xac\xab\x76\x84\x19\xe2\x90\xb5\x68\x3a\xe1\x12\x19\x3d\x20\x2b\xa5\x82\x3e\xeb\xf7\x25\xf5\x4b\xb8\xd5\x0e\xd3\xb3\xdb\x1d\x67\x27\x37\x63\x51\x08\x94\x8b\x07\xf1\x79\xc9\x9a\x92\xb8\xd6\x76\xb6\x8a\x37\xb0\x1f\xf4\x08\x5f\x64\x9d\xb0\x5a\x62\x28\xab\xee\x79\x5a\x49\x4f\xb3\xa5\x1c\x18\x7d\x55\x58\xfd\x09\x00\x00\xff\xff\x20\xab\xb9\xcf\xfa\x03\x00\x00")

func complySoc2PoliciesApplicationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesApplicationMd,
		"comply-soc2/policies/application.md",
	)
}

func complySoc2PoliciesApplicationMd() (*asset, error) {
	bytes, err := complySoc2PoliciesApplicationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/application.md", size: 1018, mode: os.FileMode(420), modTime: time.Unix(1521589818, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesInformationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x8f\xd3\x40\x0c\x85\xef\xf3\x2b\x2c\xf5\xb2\xbb\x52\x2a\x5a\x21\x90\x72\xab\x5a\x0e\x39\x6d\x94\xac\xd4\x03\xe2\x30\x4c\x1c\xd6\xd0\xf1\x44\x63\xb7\xab\x0a\xf1\xdf\xd1\x24\xd9\x24\x40\x81\x53\x9e\x32\xfe\x9e\x9f\x1f\x5b\x8f\x39\xec\x9c\x47\x28\xb8\x0d\xd1\x5b\xa5\xc0\x50\xa3\x3b\x47\xd2\x2b\x94\xe1\x44\xee\x6a\xac\x8b\x81\xaf\x3e\x87\xa2\x2e\x8d\x58\x25\x69\x09\x25\x37\x00\x4f\x75\xb9\x4f\x5f\x80\x0c\xf6\xfb\xed\x7a\x3b\xe9\xb7\xeb\x8d\xf1\xf6\x6b\x88\x15\x5e\x48\x28\x70\x3f\x9f\x41\x63\x15\x73\x78\x74\x0a\x1b\xd8\xbe\xd9\xbc\xef\x01\x17\xbc\x47\xd6\x1c\xea\xf3\x67\x51\xcb\x4a\xf6\x04\xe7\x2e\xcd\xca\x2d\xea\xdd\xaf\x54\xc1\xd4\x13\x4d\x70\xe7\xf4\xc7\x64\x59\x66\xcc\x0a\x1e\x2f\x18\x2f\x84\x2f\xc6\x3c\x3d\xff\xf3\x42\x20\x01\x9b\xfc\xba\x20\xa4\x08\xdd\xf0\x37\x62\x8b\x11\xd9\x11\x7f\x81\xa0\xcf\x18\x87\xaa\xfa\x57\x42\x01\xf2\x9d\x75\x9a\x5e\x69\xe1\x2d\xa3\xf7\x3a\x45\xd8\x27\x4f\x46\xd6\x61\x13\xa1\x0c\x61\xfe\xd7\x79\x4a\x34\xe4\xc1\x06\x42\x9b\x1b\xb3\x5a\xad\xe0\xe3\xae\xeb\x4e\xe4\x6e\x13\x77\x0f\xbb\xba\x5c\x77\x4d\xfb\x70\xff\xe9\x6e\x94\xf7\xf0\x3d\xfb\x31\xa0\x07\xab\x16\x2a\x54\xe4\x9e\x9e\xa0\x43\x35\x41\xa3\xfc\x0d\x72\xc8\x8a\xf1\xc6\xba\xc3\xbc\xee\xf0\xc7\xba\xd2\x8a\xbc\x84\xd8\xcc\xe3\xe5\x71\x1a\x1f\xe5\x62\xbc\x42\x1f\x34\xd5\xe2\x50\x64\x66\xaa\x0f\xbb\x09\x7a\xd5\x0b\x6a\xca\x54\xb0\xa3\x26\xb5\x5c\xa1\x74\x81\x05\x67\x8b\xba\x98\x0f\x7c\xd5\x0b\x8b\x63\x88\xdf\x44\xff\xd6\xe8\x71\x3e\xf1\xb8\x38\xf1\x67\x00\x00\x00\xff\xff\x1d\x4e\xb5\x26\x38\x03\x00\x00")

func complySoc2PoliciesInformationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesInformationMd,
		"comply-soc2/policies/information.md",
	)
}

func complySoc2PoliciesInformationMd() (*asset, error) {
	bytes, err := complySoc2PoliciesInformationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/information.md", size: 824, mode: os.FileMode(420), modTime: time.Unix(1521589582, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesTrainingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xc1\x6e\xdb\x3c\x10\x84\xef\x7c\x8a\x41\xfe\xab\xed\xbf\x36\x1a\x14\xf0\xcd\x30\x72\x08\x10\x20\x46\xeb\x9e\x8a\x1e\x18\x72\x64\x6d\x23\x91\xea\x92\xb2\xab\xb7\x2f\x48\x25\xa9\xd1\xe6\x24\x92\x9a\x25\xbf\x99\xdd\x60\x7b\x6e\x71\x73\x88\x9d\xb8\x09\x47\xb5\x12\x24\x9c\x30\xef\x6f\x8c\x75\x1a\xc3\xd4\x17\xc5\xf1\x70\x63\x92\xcd\x92\x1a\x61\xda\x1a\xe0\xf8\xe5\xb0\x2f\x5f\x60\x89\xfd\xfe\x76\xb5\xb9\x5a\xaf\xdf\xd6\xeb\xd5\xc6\xf4\xf6\x47\xd4\xcf\x3c\x4b\x92\x18\x6a\xed\x12\xde\x66\x6e\xf1\xe8\x32\x36\x6b\x6c\x3e\xac\x3f\xd5\x0a\x17\xfb\x9e\x21\x6f\x71\xf7\xcb\xb1\xeb\x18\x32\x5c\x6b\xc3\x89\xe9\xaf\xa2\x8f\xef\xd4\xdc\x07\xc9\x62\x3b\xf8\xe8\xc6\x72\x82\x33\xb5\xbc\x68\x96\xcb\xa5\x31\xff\xe1\xf1\x4c\x3d\x0b\x2f\xc6\x1c\x5b\xe2\x7d\xcb\xb0\xde\x2b\x53\x62\xc2\x30\x1f\xd0\x8f\xce\x66\x89\x01\xca\x9f\xa3\x28\xcb\xd5\x09\x4d\x54\xec\x5c\x4f\xb0\x1f\xba\x38\x91\x09\x36\x78\xb8\x18\xb2\x5a\x97\xa3\xa6\x55\x79\x73\xe7\x5b\x2a\x83\xa3\x31\xbb\x94\xe4\x14\xaa\x50\x09\x65\x2f\xc1\xd3\x23\xb7\x36\xc3\xbe\xca\x90\x23\xec\x2c\xf4\x33\x81\x30\x41\x12\x9e\x24\xf8\x82\x39\x06\x4f\x45\x6e\x89\x4c\xed\x13\x62\x53\x36\xf2\x02\x73\x57\x61\xaa\xf9\xc7\xa6\xa1\xe2\x81\x39\x53\x0b\xda\xff\x51\xaf\x95\xf7\xc1\x73\x60\xf0\x45\xba\x7f\x83\xc6\xee\xa4\xac\x0e\x67\xfa\x61\xe8\xc4\xd9\x27\xe9\x24\x4f\xc6\x7c\x1d\x62\x00\xad\x6b\xd1\x8c\x5d\xb7\xcc\xd2\x73\x81\xc1\x6a\xae\x4b\x44\xbd\xb2\x5f\x82\x94\x12\xdb\xa2\xc2\xb6\xa2\x85\xbe\xb7\xc1\x9e\xa8\xf0\x2c\xf4\x12\x98\x70\x69\xc5\xb5\x48\xe3\x53\x62\x2e\x6e\x62\x33\x03\x1e\x5e\xcd\xdb\x61\xe8\xa6\x92\x4b\x4d\xaa\xc4\x70\x16\x3f\xda\x6e\x85\xd2\xc6\x3f\xfb\x92\x52\xb6\xe9\x99\x1e\x17\xc9\x2d\x94\xb6\x26\x56\x9e\xff\x37\xd2\x22\x91\x80\x5b\x5c\xa2\x3e\x17\x99\xb7\x53\x7a\xbd\x72\x9e\xa3\xb9\xa8\x86\x59\x06\x6f\x81\xe4\xe2\xc0\xc5\x4b\x9f\xfb\xa1\x63\x1d\x8b\xf2\xaf\xb6\x94\x21\x53\xe9\x21\xa1\xc2\x12\xdf\x1e\xe8\x4f\xd4\xef\x2b\xf3\x3b\x00\x00\xff\xff\xc8\x51\xd3\xe8\x67\x03\x00\x00")

func complySoc2PoliciesTrainingMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesTrainingMd,
		"comply-soc2/policies/training.md",
	)
}

func complySoc2PoliciesTrainingMd() (*asset, error) {
	bytes, err := complySoc2PoliciesTrainingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/training.md", size: 871, mode: os.FileMode(420), modTime: time.Unix(1521589284, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xf1\x77\xf1\x57\x70\x49\x2d\x4e\x2e\xca\x4c\x4a\x55\x08\x28\xca\x4f\x4e\x4d\x29\x2d\x4a\x2d\x06\x04\x00\x00\xff\xff\x4e\xc7\xf4\x7b\x1a\x00\x00\x00")

func complySoc2ProceduresReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresReadmeMd,
		"comply-soc2/procedures/README.md",
	)
}

func complySoc2ProceduresReadmeMd() (*asset, error) {
	bytes, err := complySoc2ProceduresReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/README.md", size: 26, mode: os.FileMode(420), modTime: time.Unix(1521158604, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresOffboardingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\x4e\xc3\x60\x0c\x84\x77\x3f\xc5\xa9\xac\xe4\x05\xd8\x2a\x40\x88\x01\x32\x54\x4c\x88\xe1\x8f\xe3\xfe\xb1\x48\x6d\xe4\xdf\x29\xea\xdb\xa3\x84\x0e\x88\xf1\x4e\xba\xef\x3e\x2b\x27\xb9\xc3\xae\x3f\x1e\x07\x2f\x31\xe2\xad\x49\xec\x88\x7d\x5c\x5b\xbf\xb6\x3b\xea\xba\x8e\xe8\x06\xbd\x6d\x59\xad\xe2\x90\xf2\xd5\x88\xde\xf1\x81\x07\x49\x89\x93\x9a\xa0\x6a\x4e\xcb\x80\xa5\x49\xac\x60\x14\x1b\x51\x5a\xd3\x6a\x48\x07\x7b\x84\x70\xa2\x8f\xba\xed\xee\x43\x4a\x0a\x0e\x73\xe1\x4f\x14\x66\x5f\x2c\xff\x01\xff\x00\x9e\xf7\x2f\x08\x9f\x65\xf5\xd8\x67\x16\x9e\xf0\x78\xd6\x51\x8c\x85\xe8\xd5\x21\xd7\x80\x41\x2e\xbe\xce\x38\xf5\xac\x79\xc1\xec\xb5\xe1\x5b\x73\x52\xfb\xfd\xba\xc5\xd3\xe6\x49\x3f\x01\x00\x00\xff\xff\xfc\xe1\xf5\xad\xfd\x00\x00\x00")

func complySoc2ProceduresOffboardingMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresOffboardingMd,
		"comply-soc2/procedures/offboarding.md",
	)
}

func complySoc2ProceduresOffboardingMd() (*asset, error) {
	bytes, err := complySoc2ProceduresOffboardingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/offboarding.md", size: 253, mode: os.FileMode(420), modTime: time.Unix(1521590300, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresOnboardingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\x4e\xc3\x50\x0c\x45\x77\x7f\xc5\x55\x58\xc9\x0f\xb0\x55\x80\x10\x03\xed\x50\x31\x21\x86\x17\xc7\x7a\xb1\x48\x6d\xe4\xe7\xb4\xea\xdf\xa3\xb4\x1d\x50\x47\xeb\xfa\x9e\x7b\xac\x1c\xe4\x09\xdd\xce\x06\x2f\x31\x62\x2b\x27\x7c\x36\x89\x8e\xd8\xc7\x35\xf0\x6b\xd0\x51\xdf\xf7\x44\x0f\xb8\x3d\xaa\x55\xec\x53\x7e\x1b\xd1\x17\xbe\xf1\x22\x29\x71\x50\x13\x54\xcd\x69\x19\xb0\x34\x89\x15\x8d\x62\x23\x4a\x6b\x5a\x0d\xe9\x60\x8f\x10\x4e\xec\xa2\x5e\x7a\xcf\x21\x25\x05\xfb\xb9\xf0\x0f\x0a\xb3\x2f\x96\x77\xc0\x7f\x80\xf7\xcd\x07\xc2\x67\x59\x3d\x36\x99\x85\x27\xbc\x1e\x75\x14\x63\x21\xda\x3a\xe4\x76\x60\x90\xb3\xaf\x35\x4e\x3d\x6a\x9e\x31\x7b\x6d\x38\x69\x4e\x6a\xd7\xad\x47\xbc\x5d\x3c\xe9\x2f\x00\x00\xff\xff\x9f\xc6\x48\xb2\xff\x00\x00\x00")

func complySoc2ProceduresOnboardingMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresOnboardingMd,
		"comply-soc2/procedures/onboarding.md",
	)
}

func complySoc2ProceduresOnboardingMd() (*asset, error) {
	bytes, err := complySoc2ProceduresOnboardingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/onboarding.md", size: 255, mode: os.FileMode(420), modTime: time.Unix(1521590503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresWorkstationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xb1\x4e\x43\x31\x0c\x45\x77\x7f\xc5\x55\x98\x9f\xa0\x8c\x5d\xa1\x03\x3f\x00\x03\x62\xb0\xf2\xdc\x62\x91\xe7\x80\xe3\xbc\x8a\xbf\x47\x69\x2b\x58\x58\x2a\x2f\xd6\xf1\xf1\xd5\x35\x5e\x64\x8b\xf4\x50\x4b\x91\x1c\x78\xa9\xfe\xd1\x82\x43\xab\xe1\x51\x82\xb5\xb4\x44\xb9\xce\xc3\x39\xfe\xdd\x12\x65\xaf\xb6\x45\xba\xc3\x98\x0d\x36\xf7\x89\xa6\x69\x22\xba\xf9\x2f\x82\xe8\x15\x6f\xd8\x4d\x0b\x6b\x01\x97\x82\xde\xc4\x1b\x5c\xbe\xba\xb4\x50\x3b\x20\x57\xdb\xab\x2f\xe7\xaf\xba\xc7\xec\xba\x0a\xc4\xb2\x7f\x7f\x0e\x76\x75\x00\x5b\xe8\xaa\xde\x1b\x6e\x4f\xfb\xc2\xe5\xc8\x2e\x67\xef\xd0\xfd\x24\x8e\xba\x4f\xd6\xc4\x03\xbb\x55\x67\xb1\x2c\x44\x17\x20\x17\x00\xb5\xa8\x88\x77\xf9\x55\xf0\xcc\xbd\xc4\x4f\x00\x00\x00\xff\xff\x3e\xf7\x97\x57\x39\x01\x00\x00")

func complySoc2ProceduresWorkstationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresWorkstationMd,
		"comply-soc2/procedures/workstation.md",
	)
}

func complySoc2ProceduresWorkstationMd() (*asset, error) {
	bytes, err := complySoc2ProceduresWorkstationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/workstation.md", size: 313, mode: os.FileMode(420), modTime: time.Unix(1521590478, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2StandardsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x41\x4e\xc3\x40\x0c\x45\xf7\x39\xc5\x97\xd8\x42\x67\xcf\xae\xe2\x08\x5c\xa0\xee\x8c\x93\x71\x99\x19\x47\xb6\x43\x95\xdb\xa3\x50\x40\xec\x9e\xe4\x67\xf9\xf9\x09\x6f\xda\xd7\x26\x34\x32\xe3\x3d\x68\x14\xb2\xe2\xd3\x74\x6e\x0d\x97\x9d\x7a\xbb\x60\x96\xc6\x0e\x19\x88\x2a\x8e\x22\xc6\x39\xd4\x76\x90\x31\xc8\x7d\xeb\x5c\x10\x8a\xac\x63\x56\xeb\x07\xd6\x88\xd5\x5f\x53\x5a\x24\xea\x76\x3d\x65\xed\x49\x57\x1e\x59\x47\x98\xb6\xe4\xb9\x72\x27\x4f\x61\xcc\xa9\x93\x07\x5b\xfa\xb8\x53\x93\x79\x4f\xfe\x93\x30\x4d\xe7\x72\xdb\x3c\x10\x95\x11\x64\x0b\x07\x7e\x67\x98\xd5\x1e\x31\xab\xe9\x8d\x73\xe0\xba\x83\x4a\x91\xb1\x40\x0d\xc6\x5d\x3f\x0f\x6e\x32\xf8\x45\x82\xbb\xe3\x2e\x51\x65\x80\x29\xd7\xef\x7f\x9e\x0f\xf1\xb1\x92\xfe\x7c\xfa\x77\x41\x1a\x83\x47\x88\x71\xdb\x4f\x5f\x01\x00\x00\xff\xff\x19\xee\x26\x41\x25\x01\x00\x00")

func complySoc2StandardsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2StandardsReadmeMd,
		"comply-soc2/standards/README.md",
	)
}

func complySoc2StandardsReadmeMd() (*asset, error) {
	bytes, err := complySoc2StandardsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/standards/README.md", size: 293, mode: os.FileMode(420), modTime: time.Unix(1521158791, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2StandardsTspc2017Yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5b\xcd\x72\xdc\x38\x92\xbe\xfb\x29\x70\xb4\x23\xd8\xde\xb0\xbb\x6d\xcf\xb6\x4e\x1a\x59\x13\xe1\x88\x71\xb4\xc2\x72\xec\x9c\x21\x20\xab\x88\x35\x08\xb0\xf1\x53\x52\xed\x69\x5e\x63\x5e\x6f\x9e\x64\x23\x13\x3f\x04\x59\xa4\x64\xc9\xf2\x9c\x5c\x2e\x91\x40\xfe\xe1\xcb\x2f\x33\x51\x86\x0f\xf0\x3b\xfb\x7a\x7d\x75\xf1\xe2\xe2\xe2\xcd\xeb\x37\xbf\xbf\x60\x2c\x7f\xd7\x03\x03\x13\x54\x38\x32\x09\x83\x35\x3e\x38\x1e\xc0\x33\xce\x84\x1d\x06\x15\x06\x30\x81\x05\xcb\x94\x09\xb0\x77\xf8\x18\x37\x92\x41\xe8\x95\xe0\x9a\x1d\xb8\x8e\xe0\x5f\x30\x26\xc1\x0b\xa7\xc6\xa0\xac\xf9\x9d\x5d\x43\xf0\x2c\xf4\xc0\xbe\x5a\x03\x8c\x87\xfc\x79\x3c\x63\x97\x3e\xf0\x1b\xad\x7c\x0f\x9e\x5d\x07\x6e\x24\x77\xd2\x33\xbb\x63\x17\xd6\xc8\x28\xc2\x19\xbb\xc4\x25\x49\x82\x73\xd9\x83\x03\x23\x00\xb7\x5f\x7f\xf8\x5c\x4a\x07\xde\x83\x67\x1f\xe1\xa0\x38\xee\xee\x99\x32\x8c\xb3\xaf\x6a\x00\x7d\x64\x9f\xb9\x31\xe0\xce\xf0\x0d\xaf\x24\x38\x8f\x9f\x82\xe3\x22\x58\xe7\x49\x93\xff\x01\x23\xad\x63\x97\xc3\xa8\xed\x11\x80\x5e\xff\x58\x0d\xa1\xcc\x9e\x7d\x0a\xf8\x56\xb1\x05\xd9\xef\xed\xdc\x7e\x37\x96\x3b\x89\x82\x49\xe5\x20\x2d\x3d\xb3\xa5\x32\x12\x46\x30\x92\x94\xd9\x39\x3b\xb0\x81\x1b\xbe\x07\xb2\x2d\x99\xf3\x0e\x9c\x50\xa8\x87\x3d\x80\xf3\x6a\xdf\x07\x5c\x0e\xcd\x26\xe1\x00\xda\x8e\xf5\xd1\x11\xdc\xce\xba\x81\xe3\x52\x76\x47\x6e\x71\x86\x6b\x26\x50\x2f\xab\x97\xae\x68\x0d\xfe\x47\x5d\xfb\x0b\xf8\x11\x2d\x72\xa3\xb4\x0a\x0a\xfc\x19\x3b\x1f\x47\xad\xc0\xb3\x2f\xa0\xe1\xc0\x4d\x60\x97\x77\x23\xb8\xa0\x3c\x9c\xb1\x3f\x46\x48\x7a\x7c\xaa\x7a\x04\x7d\x3c\x63\xd7\x71\x1c\x35\x29\xe1\xd9\x5f\xc9\x04\xf5\x25\xb2\xd2\xaf\x93\x95\x3e\x4f\xfa\xc2\x24\x51\xc7\x6e\x55\xe8\x8b\xf9\x8a\x74\x1d\xf3\xc1\x45\x11\xa2\xc3\x27\x1c\x8c\xd6\x91\x1f\xb4\x32\xf8\x05\x1a\x81\x8f\xa3\xb3\xa3\x53\x3c\x00\xe3\x31\xf4\xd6\x91\x1a\xf4\x37\xb7\xd0\x0d\x1d\x8a\x86\x1c\xa3\xf3\x51\x91\x5d\xed\xcd\xff\x82\x08\xea\x70\x1a\xb9\x53\x9c\x9c\x6b\xcd\xae\xab\x1c\xc5\x1b\x97\x74\x52\xe6\x71\xfc\xa5\x4a\xf8\x77\x94\xf0\x8c\x7d\x84\x5d\x12\xf5\xdc\x7b\xb5\x37\x59\xe6\xbf\xab\x41\x05\xcf\xce\x17\xe2\xae\xb8\xa2\x06\xf5\xf5\x08\x42\xed\x94\x60\x5f\xe0\xcf\xa8\x5c\x36\xf5\x3f\x7a\x30\x69\x0f\xdc\xf3\xe1\xf5\x26\x9d\x3e\x61\xb0\x70\x91\x8e\xc9\x3f\xd0\xf4\x97\x77\x39\x7c\xae\xb8\xa3\x25\x68\xf1\xaa\x1d\x6e\x70\xdd\x38\x63\xa1\x6a\xd7\xee\xde\xad\x6e\x4f\x81\xf0\xdb\xe3\xe1\x86\x07\x3a\xa5\x5d\x89\xff\x2e\xfb\x36\x70\x65\xf0\xd1\x11\x02\x3e\xa9\x8c\x54\x07\x25\x23\xd7\xe9\xdc\x6b\xb5\x37\xb4\x04\x05\xd6\xb6\x9f\x5b\xff\x5d\x59\xad\x44\x31\xdf\x15\xd9\x47\xa0\xdd\x26\x24\xba\xc8\xfb\x09\xa0\x67\x1a\x07\xf5\xd6\x05\x61\x07\x65\xf6\xe8\xb8\x24\xb3\xef\x10\x8d\x50\xe8\x6a\x13\x94\x9a\x8e\x4f\x11\xf6\x8c\x5d\x69\x6e\xca\x96\x30\x72\x8c\xb1\x9d\x75\xec\x3a\x0a\x01\xde\x2b\x6b\x5a\xc7\x61\xe8\xfd\x95\x8b\x6f\x7b\x67\xa3\x21\xa4\x99\xad\x35\x7f\xf0\x2b\x88\xde\x10\x3a\x57\xb9\x8f\x27\xaf\x5c\x39\x7b\x50\x12\x3c\xfb\xea\x78\x0a\xa4\x60\xd9\x67\xae\x0c\x19\x78\x65\x09\x0c\x25\x72\xe6\xbb\x55\x67\xf6\x56\x4b\x3f\x73\x07\x17\xc2\x46\x83\x66\x06\xd2\x2c\xf4\xa0\xdc\x09\x5e\x3d\xee\xb8\xbe\x3e\xf1\xa3\xd9\x59\x27\x30\x59\x94\xdd\x70\x99\x23\xfb\xda\x3b\x1b\xf7\xfd\x2c\x78\x1f\x8c\xd5\xf9\xb1\xbe\x6a\x80\xf6\x33\x70\x9f\x16\xf9\x64\x04\x6a\x7c\x98\xd6\xb8\xc5\xac\xd4\x46\xcb\xa3\x5e\x24\xd3\xfc\x61\xf6\x16\x5d\x90\xc1\x57\x40\xeb\xd2\xcb\x3b\x0a\x88\x03\x60\xa0\x78\x5a\x6d\x6b\xb7\x76\x5d\xeb\xd8\x47\xe5\x85\x1a\x09\x36\x5b\xe7\xbf\xb8\xb8\x78\xbb\xc1\x00\xec\x4d\x8a\x54\xeb\xd8\x1e\x4c\x46\x7d\x5c\x35\x62\xb4\xbb\x9c\x1b\x3a\xf6\x67\xe4\x64\x66\x65\x68\x6f\xf4\x05\xc6\x8f\x8f\x23\xe2\x03\xf9\x6f\x17\x0d\x01\x0d\xea\xf5\x70\x9e\x22\x99\xde\xae\xca\x54\xde\xd4\x47\x82\x88\x88\x71\x99\x92\x6a\xdd\xbb\x63\xca\x08\x1d\x25\xed\x55\x83\x65\x3d\x1b\xa0\xbd\x97\xc2\x74\xcc\x00\x1a\x99\xbb\xe3\x33\xa8\xf1\xeb\xaa\x1a\x33\xd9\x09\x9d\xa0\x60\xef\x98\xb1\xd7\xc1\x9e\x3b\x52\x62\xe0\x21\xa0\xef\xf9\x6e\x87\xca\xe0\xe9\x7c\x8a\x2c\xbf\x6e\xb8\xd9\xa7\xbc\x82\x69\x6d\xb2\x16\xc9\xe4\xe3\x6e\x87\x60\x68\x02\x13\x9a\x13\xdd\x0b\x96\x81\xa1\x53\x8c\x32\x28\x4c\xfe\x98\x93\x92\xd3\x29\x19\x23\x14\x7a\x42\x5d\xbb\x63\x4e\xf9\x6f\x14\x2a\x89\x3c\x05\xbb\x8d\xc2\x24\xe1\x86\xd3\xf3\x36\x68\x15\x5a\x30\x58\xda\x9e\x8b\x5e\xc1\x01\xca\x66\x98\x50\x5b\x87\x0b\x67\x7d\x02\xc1\xbc\x0e\xc9\x67\xb8\x3e\xfe\x5f\x5d\x89\x63\xb2\xb9\xe1\x5e\xa5\x58\x90\x10\xc0\x0d\x09\x02\x7b\x7b\x4b\x2f\xa7\x07\x7d\x6f\xa3\x96\xec\x06\x32\x5b\x93\x6b\xe2\x6f\x39\xbb\x05\xe4\xd1\x62\xae\x52\x5c\xd3\x86\x3b\xc7\xa3\xa4\x64\x45\x76\xc3\x7d\xef\x53\xf1\x7e\xeb\xad\x67\xd6\xc6\x7a\x93\x83\xc0\x33\xd1\x73\xb3\x07\x14\x8a\x07\x26\x48\x3b\x24\x28\xe4\x4e\xa4\x74\x4c\x0d\x23\x17\x29\xf0\xfd\xd1\x07\x18\xbe\x2f\xce\x7e\xdb\x8a\x33\xd0\x40\xf9\x50\xce\xf2\x61\xa6\xb0\x9e\xd9\x8c\x7b\xdc\xc8\xff\xb2\x8e\x79\xcc\x83\x48\xe9\x20\xa1\x1b\xd1\x14\xe4\x02\x5e\x80\xa3\xbc\x74\xdb\x43\xe8\x81\x72\x09\x91\x00\x6b\x88\x11\xad\x08\xc9\xb8\x03\x36\x3a\xf0\x85\x37\x37\x87\x67\x4d\x81\xf5\x30\x84\x0a\xb3\xb8\xc4\x02\x7e\x16\x1b\x4a\x48\x27\x47\xe4\x24\xc6\x59\x48\x35\xc8\x40\x35\x48\x72\xaf\xf5\xd0\x1c\xf7\x0c\x4d\x25\x41\xf2\x6f\x68\x0c\x61\x9d\x4b\x1e\x67\x89\xaa\xb5\xe8\xe6\xc1\x28\xeb\x96\xe5\x43\x58\xad\x41\x3a\x0a\xf5\x89\x29\x9f\xaa\xfd\xee\x7e\xbf\xd1\xda\xc5\x75\x93\x61\x51\xb6\x84\xa5\x39\x8e\x4c\x70\xea\x26\x06\x28\x11\x3c\xa8\xa0\xf6\x09\x1f\x2a\x20\x3c\x14\xdc\xe4\x67\x21\x60\x4c\x84\x41\xe3\xae\x2b\x11\xff\x6e\xc3\x51\x5c\x7b\xbb\x2e\x76\xca\x63\x7a\x4d\x7c\xac\x38\x58\x40\xaa\x63\xb5\xdd\x9f\x40\xff\x23\x0e\xe2\xbb\x0d\x1c\x90\x80\x55\xe5\x86\xed\x12\x43\x19\x0b\xfb\x24\x63\xd6\xe2\x88\xdd\xe2\x7f\x95\x67\x70\x37\x82\x08\x20\x49\x2b\x65\xd8\xe8\xac\x00\x49\x35\x09\xbd\x31\xc6\x30\xad\xa1\x0c\x99\x11\xc5\x3a\x15\xf2\xfd\x86\xb7\xd5\x50\xab\x38\x6d\xf7\xc4\xfa\x38\x91\x50\xe6\x41\x44\xca\x01\xde\xee\xc2\x2d\x77\x80\xa1\xb8\x73\xbc\xd6\x67\xb9\x1a\x73\xa2\x57\x01\x4a\xa5\x84\x56\x1d\x9d\x0d\x49\xec\x96\x22\x20\x10\x05\x72\x75\xfe\x3b\xda\x79\x48\x15\x71\xdd\x0b\x0e\x24\x4a\xb0\x6c\x00\x08\x0d\x98\xff\xfb\x9f\xff\xf2\xf7\x7a\xe1\x7d\x1b\x1c\x57\x0e\x0f\x4a\xb0\x4c\x79\x1f\xe9\xe8\x24\x40\x13\x0e\x64\x42\xe3\x14\x28\x7b\xc7\x4d\x68\xfe\x9e\x54\xef\xda\x24\xe2\x60\xaf\x7c\xca\xc7\xa8\x6d\xa2\x91\x98\x50\x0c\xdc\x4e\x38\x90\xea\xf8\xfc\x9f\xe8\xf1\xf1\x5b\x3a\xef\xd9\x98\xca\x33\x2e\x31\xd1\xe0\x52\x20\xd9\xcd\xb1\xd9\xe3\x35\xfb\x1b\x51\x64\x7c\xfe\xb1\xef\x76\xf4\xc6\xaa\x7e\x0e\x98\x83\xc1\x1e\x40\x22\x74\x9a\xf4\xe0\xb4\xa6\xb1\x4c\x5b\xb3\xc7\xef\x8a\x52\x2b\x49\xee\xfd\x46\x70\x4f\x86\xe8\xd8\x60\x25\xe5\x9b\x0e\xa9\x63\xda\xd2\x97\x8d\x82\x65\x92\x07\xde\x35\x51\x54\xc0\x38\x27\x04\x4b\xa0\x7e\x6f\xcc\xdc\x70\x0f\x92\x59\xc3\x9c\xd5\xa9\x2d\x30\xe7\x75\xb4\x71\x93\xb7\x24\x60\x66\x4b\xb0\x9d\xb2\x5e\xc7\xf6\xea\x90\x00\x36\x25\xe7\x4a\x5b\x53\x36\x31\x08\x3e\x94\x4b\x34\x70\x1f\xd8\xe8\xd4\x41\x69\xd8\x27\x5a\xed\x61\x8f\xf4\xac\x80\x9a\x8c\x69\xd3\x27\x45\xe9\x7a\xd2\x76\xe0\x83\x53\x88\x5f\x63\x7f\xf4\xed\x31\x0c\x96\xed\xb8\x28\x04\x96\x32\xe8\x7d\xa6\x7a\x89\xc9\x04\xee\x38\x1e\xeb\x8e\x4c\xcf\xb0\xf4\x00\xd7\xac\xd2\xb1\x1b\x2e\xbe\xfd\x12\x47\x36\x80\x54\x9c\xf9\x60\x1d\xdf\x43\xeb\x0e\x0f\xc6\x2b\x4a\x43\xda\x26\xb6\xe7\x5f\x11\x4a\xd7\x50\xc1\x44\xee\xad\x31\xa0\x9f\x66\x87\xf5\x4a\x52\x2a\x8f\x70\xa9\x4c\x84\x06\x90\x50\xe9\x62\x96\xac\x3d\xd1\x83\x84\x36\xd5\x60\xc9\x02\xd6\xe8\x23\xe3\xbb\x90\x99\x42\x29\x0a\x83\x65\x0e\xb8\x4c\x21\x2a\xe8\x4d\xb2\x0e\xf9\x37\xc7\x66\x02\xa3\x74\x10\xf3\x6a\x3d\xf7\xec\x06\xc0\x30\xa9\xe8\x08\xf6\x05\x8c\xdb\x03\xe4\x52\x87\x46\x3e\xcd\x12\xef\x9f\x0a\xcc\x43\xae\x2f\x5b\x4c\xe5\x7b\xac\xe1\x50\x02\x07\x3c\xf8\x0c\xaf\x36\x52\x9d\x6c\x63\xc0\xe0\x27\xe6\x9c\x8f\xca\x8d\x8d\x46\x72\xa7\xd6\x45\xfb\xf0\x40\xb0\xa2\x9e\xc1\x71\xe3\x07\x45\x6d\x0b\xc4\x82\x94\x34\x4b\xcb\x66\xb0\x07\xae\x13\x47\x9b\x55\x8b\x4d\x20\xdd\x07\xa2\x39\xde\x05\x51\xd8\xae\x0d\x7f\xcf\x54\x60\x32\x3a\xaa\x33\x36\x44\x28\x70\xc4\x9f\x18\xa3\x7f\x79\xc8\x33\x39\xb5\x67\x0f\x50\xf2\x62\xb9\xac\x10\x89\x9d\x21\xa3\x8e\xa3\x4d\x6d\x0d\x85\x4f\xcb\x28\x0a\x90\x44\xd3\x98\x81\x98\x1d\xa6\x72\x1b\xfd\x14\x91\x4f\x90\xfb\xc3\x2c\xd5\xe7\xf7\xe7\xc5\xd2\x2c\xc3\x51\x79\x9f\x44\x2e\x55\xdd\x60\x8d\x0a\x96\x6c\xdb\x52\x0e\x5b\x8a\x8b\x23\x7b\xf9\xe6\xd5\x54\x51\x58\x34\xc4\x4e\xed\xa3\x2b\xbc\x1d\xc9\x89\x03\x1f\x75\x28\x2d\x9d\xa5\xee\x98\x3e\x0f\x51\x23\x3f\x9b\x60\x1c\xf7\x7e\xf9\xf6\x15\xf3\xd1\x23\x20\x4f\x85\x7b\xb0\xf8\x82\xce\x00\x71\xa0\x3c\xb8\x78\x7b\xcd\x10\xeb\x7c\x31\x6b\x57\xcf\x40\x53\x4c\x14\x42\x6d\xc7\x92\x22\xa8\xf7\x8b\x80\xd0\x3c\x85\x18\xcb\x8d\x45\x77\x15\x26\x86\xbe\x52\x46\x52\x69\x7c\xa0\xe6\xfc\xe4\xcc\xd4\x16\x34\x3c\x44\xe4\xa2\x52\x79\x4e\x84\x22\xa9\x0b\xce\xd9\x93\x62\xbf\xf1\x74\x83\x5f\x2b\x8e\x3c\x6b\xe4\x40\x11\x72\xb9\x4b\x48\x54\x8a\x5b\x68\x2b\x27\x3c\xbd\xa5\x32\x5a\xb0\xae\x35\x03\xae\x27\xff\xa9\x32\x5a\x21\x6e\x1b\xdb\xa6\x8a\xd3\x3a\xd6\xf3\x03\xe4\xd8\x80\x54\x0a\xb3\x1d\x57\x3a\x3a\x28\x7d\xf6\xbc\xcb\xba\xc6\xec\x65\xdd\x53\x19\x41\xf1\xe8\x5f\xa1\x25\x3b\xa6\x76\xcc\xdb\x0e\x4b\x29\xe2\x1f\xb5\x84\x6c\x4e\x26\x4f\xdd\x5b\xe6\xa3\xe8\xcb\xb6\xab\x8a\x6f\xa6\xe9\xd1\x1a\xd9\x1e\x05\x05\x92\x9d\x4a\x84\x24\x0d\xee\x40\x44\x72\x29\x67\x12\x98\x21\x6d\xd3\xdf\x0b\x83\xc1\x2a\xd5\xee\x1d\x1f\x70\xc1\x68\x24\x38\x1f\x48\x15\x04\x16\xae\x0c\x52\x1d\xca\xd1\x21\x67\xe7\xa6\x0a\x5d\xd9\xf5\xe1\xa2\xef\xc3\x46\xde\x9d\x9a\x06\xcb\x7a\xbd\x41\xbb\xb6\x80\xb1\x35\x8b\x52\x86\xb9\xd7\x18\xa7\x62\xfc\x65\xa3\x1a\x69\x59\x65\x22\x71\x8d\x3c\xe4\x3f\x41\x99\xd6\x77\x15\x71\xe8\x51\x2b\xe2\x90\x0c\x10\xc0\x93\x1d\xd0\x08\xb5\xdd\xda\x22\xf6\x84\x59\xcb\x6a\x66\xc9\x53\x6b\xee\xa9\xe8\xb7\x12\x8e\xa7\xba\xfd\xf7\x56\xa5\xd5\x98\xb8\xf6\x46\x66\xd5\x2a\x16\xcb\x6d\xfd\xdc\xd8\x1b\x11\x27\x77\xb0\x9c\xa2\xb6\x11\x99\x7d\x6a\x2e\xdd\x44\xaf\x0c\x46\xb6\x54\xde\x45\x12\x66\x55\xb6\x8d\x0a\xba\x34\x89\x08\xfc\xa9\xbf\x30\x75\xcc\xbc\x15\x18\x4c\x32\x35\x09\x0f\x34\x32\x4d\x4f\xd6\x4d\x47\xee\x82\x01\x77\xb2\xe3\xf9\xd6\xb4\x79\xc8\xc3\x06\xaa\x1e\x12\x1a\x67\x38\xac\xd0\x22\xa2\x73\x78\x54\x72\xfa\x27\xf2\xce\x47\x2e\x4a\x67\x2f\x7a\x02\x8c\x53\x0c\x7f\xb9\xee\xd8\x96\xe8\x11\x97\x4d\x7a\x4e\x8b\x4a\x18\x52\xc7\x50\x2e\xdb\x9e\x25\x7c\x6a\x46\xe0\x52\x2a\xfc\xcc\xf5\xf4\x7a\xb0\xac\x07\x3d\x7e\x4f\x90\x9c\x9f\x0c\x91\x1f\x1f\xff\x53\x4c\x77\x39\x5b\xc1\x2c\xee\x1b\x0b\x37\x19\xdd\x33\x30\x07\xe5\x2c\xcd\xc9\xe6\x6c\xba\x0d\x7d\x62\xc6\xa5\x48\x58\xf0\xaf\x7c\xee\x8f\x8b\xf3\xf3\x9d\xe7\xe3\xfc\xcd\x46\x4e\xa1\x83\x3b\x2d\x3e\x6a\x3e\x6b\x77\xe4\xde\x4c\x53\xab\xd7\x47\xbf\xf3\x60\x6e\x85\xe2\xa2\x5f\x5a\xed\x96\x10\x26\x97\xd3\x4b\xfa\x7a\x3f\x27\x4b\x1d\xf0\x94\x85\xdb\x55\x54\x38\xae\x88\xb5\x1e\x0a\x52\xf9\xd1\xfa\x34\x7c\xfe\x29\x92\x2c\xc7\x69\x2f\xae\x3e\x6d\x99\x68\x6d\x32\x44\x8d\x07\x7f\x92\x95\x1e\x1a\x14\x4d\x63\x0e\xa2\x59\xab\x82\x4e\x27\xbe\xed\x7e\x62\x0a\x55\xb9\xee\xdb\xa5\x08\x2d\x91\x29\x0b\x56\x23\xbf\xcc\x15\xbb\x3b\x28\x01\x69\xd8\xc1\x72\x05\xdb\x2d\x9b\x7c\x19\x42\xf2\x8b\xbe\x7d\xf3\x24\x7e\xd0\x3a\x1b\xe3\x8a\x29\xbb\x8c\xed\x34\xb9\x89\x5e\x4a\x94\x39\x6e\x95\x19\x23\x1e\xda\x49\xb3\x5a\x45\xd0\x63\x88\x64\x1a\x02\x10\xb0\xa6\x12\x42\x44\xc7\xc5\xb1\x4b\x59\xb7\x90\xea\x22\x75\x57\x45\x2e\xe7\xb3\x1c\x94\x47\xd7\x0e\xa8\xe3\xfa\xe9\x7c\xa4\x8e\x0d\x66\xff\x27\x64\xde\x18\x84\x3c\x2c\x33\x65\x81\x6f\xc0\xf8\x81\x2b\x4d\x78\x4f\xd5\x9b\x56\xa8\x8b\x8d\x61\x8c\xa1\xfa\x43\x1f\xbb\xec\x8a\xfc\x19\xf3\x44\x6a\xf2\x23\x89\x15\xc2\x3a\x49\x83\xd8\x34\x4b\x6b\x03\xef\x69\x5a\x6d\x30\xb5\xef\xd2\xca\x07\x4b\x05\x49\x0e\xb5\x00\x83\xaf\xfd\xe3\x7c\xb2\xa8\xd9\x43\x2a\xfa\xa7\xea\x98\x9c\xfd\xa3\xaa\x6e\xa1\xce\x58\x6e\x29\x18\x1b\x54\xba\x08\x46\xa7\xde\x47\x5a\x0b\x4b\x23\x1b\x13\xec\x8f\x4e\x1d\xb8\xc0\x57\xf2\x05\x8e\xc7\x21\x63\x7e\xfd\x35\xed\x9e\x77\x53\x9e\xc5\x51\xf2\xd2\x7c\x6f\x20\x4e\x9e\x4a\xb2\x32\xf1\x41\xc6\xd6\x90\xcd\x85\x1c\x27\x02\xcf\xf0\x20\xbf\x96\x2b\xe7\x82\x52\xd4\x6f\x9b\x27\x80\xef\xe8\x41\xae\xe8\x79\xe2\x81\xad\x1b\x01\x33\x5c\x17\xbd\x25\xcb\x4e\x67\x65\x8e\xe5\xc2\x6a\x0d\x79\x66\x15\x3d\x60\xe9\x42\xe4\x14\xff\x8f\x55\xbb\xb6\xbe\x0e\x0d\x52\x72\x4b\x8d\xa1\x35\xbd\x8a\xc5\x16\xfe\xce\xc5\xb9\xc0\xca\xe9\xcf\x08\x26\xd9\x6d\xc7\xb8\x39\x76\xb8\x14\x70\xd1\x67\x39\x5f\xb3\xcb\xbb\x11\x8f\x47\x48\x8f\x9b\x50\xee\xa1\x3c\xaf\xa0\xca\xe7\xec\x08\x32\x51\xf2\xb9\xc8\xd6\xe5\x86\xea\x49\xe3\x34\x49\x5e\x3a\x87\xaf\xd9\x35\x56\xa4\x45\xd4\x76\x55\xea\x67\x16\xd9\x95\x09\x60\x24\x2e\x12\x1d\xd2\x83\x52\x32\x3f\x99\x14\xcc\x42\xbf\x79\x7a\x7d\x46\x8e\xe0\xf3\x1f\xb1\x69\xa9\xe8\x4e\x47\x12\x57\xb3\x7b\x0d\x57\x1b\xef\x67\x79\x40\xa6\x86\xbf\x0f\xf5\x5a\xd8\x0f\x1d\x94\xd9\x8d\x85\xbf\xd1\x65\x92\x96\xda\xa0\x2f\xd1\x4c\xb0\x08\xbd\x59\xbb\x6d\x76\xa8\xf0\x7b\x03\x18\x3b\xd6\xa5\xa6\x44\x7d\x85\x7b\x76\x0b\x5a\xe3\xbf\xcb\xa0\xa7\x12\xa4\x76\x4d\x12\x63\x42\xa8\x3c\x71\x0b\x8a\x04\x3e\xfd\x7f\x1d\x3f\x28\x0b\x64\x7a\x57\xb7\xa1\xaa\x2b\x4f\xd0\xe6\xde\x7d\xae\x78\x3b\xb1\xec\xd6\x2d\x02\x9d\x2e\x4e\x3e\x80\x83\x45\xd0\x7c\x2a\x7c\xdb\x8f\xc8\x28\xfa\x03\x92\xad\xd3\x3e\x97\x2f\xf6\xad\xca\xf3\xac\x51\xf7\xdb\x06\x29\xa3\x4e\x0b\xe8\x79\xad\xb0\x65\x9e\x1f\x77\xd1\xd6\x85\x01\x1a\xa2\xce\x4c\x5e\x26\xa5\xf8\x45\xca\x98\x73\x54\x5c\xcc\x65\xca\xa4\x8b\xee\x08\x12\x73\x91\xeb\x6a\x50\x17\x04\x0e\x0a\x6e\x53\xc3\x8f\x1a\xeb\x39\xc6\xbb\x89\x2f\xd4\x89\x90\x75\x8c\x1a\x2d\xce\x1a\x25\x98\xb0\xa3\x2a\x97\x79\x79\x58\xda\x67\x21\xe1\x93\x30\xf4\xd3\xae\x99\xaf\x4a\x30\x0a\x64\xb7\xcc\x61\xae\x1c\x1e\x90\xd3\x2d\x6f\xa3\xf2\xf8\xc3\x01\xf7\x59\x51\x42\x83\xf4\x27\x02\x83\x92\x2a\x9e\x29\xe7\x6f\x5d\xa6\xc8\x37\x50\x90\x98\x0f\x60\x64\x9a\xad\xf2\x71\xc4\xcf\xeb\x5e\xa9\xd3\xd9\xf6\xcb\xec\x0c\x9a\x56\x9f\x66\xf1\x19\x06\x92\xa2\x27\x87\x59\x39\x59\x2e\xcb\x90\xfa\xe9\x86\x70\x80\x3c\xc1\xfb\x11\x5b\x24\x47\xcd\xc0\xb1\xdc\xbb\xc9\xd9\xe7\xf9\x5c\xf7\x3c\xce\xda\xba\xbd\x91\x53\x2b\x6c\x78\x66\x69\xc8\x06\x8b\x96\xe4\xa8\x94\xd4\x45\xdb\xdc\x2f\xdb\x22\x25\x35\x3d\x4c\xc9\xfd\xb9\x34\xdd\x08\x4b\x07\xf5\x2a\x56\x41\x5e\x5e\xeb\x96\xa9\x6a\x99\xd5\x2c\x0e\xb0\x60\xa1\x6c\x39\xd1\xaf\x49\xe2\x9f\x8c\x97\x5b\x57\x27\x7e\x50\x95\x34\xa9\x2b\xe7\x00\xeb\x66\x90\xf3\x49\x62\xab\xe1\xcb\xa9\xac\xb8\x71\xc8\x8f\xc1\xbf\xfa\xd9\x6a\xaf\x97\xe3\x85\x65\x94\xd2\x67\xba\xf2\x9f\xa7\xd4\x6d\x67\xd9\xe6\xc1\xd1\x2c\x78\x7b\x9b\x86\x47\xd3\xcd\x88\x67\xd3\xe2\xf5\x6a\x37\x7c\x76\x65\xef\xdf\xff\xfc\x57\x72\x92\x4a\x3f\xbf\xc1\x92\x6f\x04\xa7\xac\x54\x22\xdf\xb4\xfc\x05\xa9\x1c\x62\x1e\x91\x67\xf2\x1e\xcd\xa2\xd6\x6e\xf5\xed\xa6\x6b\xc7\x2b\x26\x5c\xaf\xfd\x8b\x09\x1f\x6f\x3a\x3c\xf7\x0f\x9b\x0d\x4b\xdf\x5d\x7b\xbb\xa8\x92\xa7\x43\xc6\x08\x2e\x42\x4c\x89\xd5\x47\x9f\xef\xa6\x6d\xc6\xde\x46\x98\xe5\x5a\x87\x36\x53\xa5\x6d\x90\x6e\x2b\xe5\x68\x46\x4e\xd0\xfc\xc8\x67\xba\x69\x92\x27\xea\x25\xdd\x9c\x74\x24\xa6\x9f\x17\x6d\xcc\xda\x96\xc3\x9c\x1f\x8c\xf4\xf5\xab\x1b\xb3\xc6\x45\xbd\x2d\x6d\x77\xf5\x04\xe6\xeb\x7c\x65\x56\x88\xea\xd2\xf8\x77\x49\x94\xb0\x8c\xda\x47\xcd\xa7\xf1\x08\x39\xf7\xd9\xc4\x5f\xbf\xde\x51\xc5\x9f\xa7\xbf\x14\x43\xa6\xfc\xb4\x23\xdf\x43\x27\xd6\xbd\x16\x4e\x3d\x68\x59\xca\xbd\x92\x21\x4a\xd2\x6c\xd7\xc5\x63\xb5\x5e\x9a\xd4\x6b\x13\x27\xcf\x57\xca\xf7\x2c\x76\xf8\xb0\xd9\xfd\xd0\xd3\x95\xd2\x69\x2c\x30\xc1\x73\x1c\x7f\x09\xf6\x17\x49\x9f\x1b\xf8\x26\x58\xcf\x3f\xa4\xfb\x79\x30\xbb\x35\x42\x6d\xe7\xb5\xa5\xdf\x97\x89\xb3\x00\xba\x03\xd7\x95\x29\x38\x7d\x76\xe0\xad\x3e\xd4\x8e\xe0\xc4\xcc\x4a\x5f\x87\x1e\x88\x25\x84\x95\xa1\x22\x37\x4d\x60\x87\x51\xa3\x59\xfc\x54\xd7\x47\x4c\x6c\x2b\x7d\x90\x26\x76\xf3\x25\x70\xc2\x4d\xfa\x61\x47\x1d\x4d\x35\xe8\xfa\x34\x0c\xbf\xa8\x2c\xae\x85\xc2\xe9\xe7\x1d\xe5\x4e\x40\xf3\x6e\x53\xb5\xcc\xee\x70\x23\x1e\x0d\x5c\x52\x43\x18\x41\xdc\xac\xf4\xf8\x16\x3e\xf9\xff\x00\x00\x00\xff\xff\x35\x50\x03\x1b\x67\x3b\x00\x00")

func complySoc2StandardsTspc2017YmlBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2StandardsTspc2017Yml,
		"comply-soc2/standards/TSPC-2017.yml",
	)
}

func complySoc2StandardsTspc2017Yml() (*asset, error) {
	bytes, err := complySoc2StandardsTspc2017YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/standards/TSPC-2017.yml", size: 15207, mode: os.FileMode(420), modTime: time.Unix(1521224165, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2TemplatesDefaultLatex = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\xdd\x6e\xec\xb6\x11\xbe\xd7\x53\x10\x88\x8c\x1e\x03\xbb\x86\x7d\x8a\x16\x45\x80\x0d\x82\x9e\xfc\xb4\xc9\x1e\x24\x70\xdc\x22\x80\xe5\x0b\x4a\x1a\xad\x88\xa5\x48\x85\xa4\xec\xdd\x12\xba\xe9\xf3\xf4\xa9\xfa\x24\xc5\xf0\x47\xa2\xb4\xeb\x5e\xb4\xe7\xe2\x2c\x35\x33\x9c\x19\x0e\x87\x9c\x6f\xe8\xa2\x96\xd5\xd0\x81\x30\x15\xa7\x5a\x3f\xe7\xac\xf9\xd0\x48\x61\x34\xfb\x07\xdc\xe6\x79\x1c\xe6\x9b\x1c\x44\xcd\x9a\x1c\xf9\x9c\x8a\xc3\x6d\x9e\x97\xb4\x04\xbe\xc5\x8f\x05\xb7\xa7\x3d\xa8\x30\x7d\x1a\xfb\xd1\x24\xd6\x48\xf5\xc1\xd9\x93\xbd\x61\x52\xdc\xe6\x79\xf2\x95\xe7\x1a\x7a\xaf\xb2\x91\x2a\x7f\xb1\xf9\xc2\xc5\x7c\xcc\xd0\x4c\x09\xb4\x03\x45\x95\x61\x15\x87\xdb\x3c\x2b\x06\x0d\x3d\xad\x8e\xf4\x00\x76\xc1\x1b\xc9\x0d\x11\x00\xb5\x26\x46\x92\x12\x08\x97\xb4\x86\x9a\x34\x4c\x69\x93\x05\x87\xb2\xb8\xec\x86\x76\x8c\x9f\x97\xea\x9e\x9d\xbb\x33\xd7\x7b\xa9\x43\x74\x16\xb4\x4b\xd7\x67\x11\xf4\x1b\xb8\x86\xa5\xab\xbc\x93\x35\x28\x31\x2e\x3c\xe1\x4c\x80\x36\x0a\x4c\xd5\xae\x56\xa6\xc1\xe8\x9e\x56\x30\x66\x05\x0e\xbd\x8c\xcd\x93\x09\xf9\xac\x2a\x9d\x48\x3b\xad\xcf\x5d\xb9\xa1\x9d\xee\xa8\x69\xc7\x05\x93\x35\x27\x30\x70\xda\xb0\x86\x0f\xd4\xc0\x69\xc9\x6d\xd8\x89\x9b\xd3\x47\x17\xc8\x5e\xc9\x57\x56\x83\x26\x85\x81\x93\xd1\x43\xa9\x2b\xc5\x7a\x93\x15\xac\x11\x43\x47\xee\x8b\xa0\x8a\x3c\x14\x0d\x2b\xa2\x3e\xf7\xb5\xbb\x27\x37\x84\x35\xa4\xaf\x1b\x03\xa7\x8c\x90\x45\x88\x43\xfc\x41\x54\x21\xae\x20\xaa\xdc\xc7\xeb\xe9\x21\x2c\xe8\xc5\x06\xc6\xb8\x9a\x3d\x98\xe6\x4f\x2f\x96\x89\x7e\xf0\x5c\xd4\x06\x83\x92\xb7\xf9\x52\xd0\x22\x51\x9f\xbb\x24\x44\x68\xc1\xfb\x15\x5c\x95\x8a\x9c\x80\xd3\xe0\x62\x58\x4e\x46\xc8\x52\x11\xc6\x50\xf7\xe0\x3d\x41\x1d\x17\x12\xee\xe4\x44\x89\x86\xe1\xff\x35\x34\x74\xe0\xc6\xa5\x04\x50\x33\x28\xd0\x76\xcf\x0e\x7e\xb4\x7b\x82\x5f\x37\xbf\x54\x94\xc3\xee\x33\x35\x55\xbb\x97\x6f\xa0\x2a\xaa\x61\xcc\x96\xf9\xc7\x40\xfb\x75\x09\x78\x9b\xb3\x2b\xc9\x34\x06\xfa\x4e\xd0\x0e\xf2\xf1\x79\x49\x8c\x49\xfa\xb2\x12\xc6\x8f\x90\x36\x98\xb5\xab\xf0\x09\x78\xab\x64\xd7\x51\x51\xdb\x02\xa9\xa3\xfd\xf7\x3f\xff\xb5\xcc\xd7\x8e\x32\x81\x4a\xdc\x04\x42\x30\x35\x23\xc9\x1f\x9e\xf8\x35\x1f\x9d\x15\xe5\xf2\xe0\x44\x81\x7c\x69\x4a\x53\xa1\x57\xa6\x22\xc9\x9b\x8a\x5f\xb3\xa9\x15\xe5\xd2\x54\x14\x58\x99\xea\xa4\x90\xeb\x55\x05\xd2\xf3\x67\xda\xf7\x4c\x1c\x76\x06\x4e\x5b\x2a\x34\x4b\xe5\x27\xcb\x1b\xbf\xf6\x35\x39\x5f\x51\x56\x0e\x4d\xc9\x3e\xc9\xad\xfd\xa2\xa6\xbd\x88\xb6\x27\x7d\xf8\x86\x1d\x98\xd1\x9b\x3d\x35\x4c\x6c\xbe\x57\x00\xc7\xdb\xb8\x03\x5e\x22\xdd\x81\x05\xe5\xda\x0e\x78\x81\x95\xf9\x4f\x3f\xfc\xb8\xde\xef\x24\xed\x4f\xf0\xe9\x87\x1f\xc7\xc9\xb1\x44\xd8\xfb\xf1\xe9\x87\x1f\x67\x17\xe6\x8f\x4b\xeb\xc9\xcc\xf4\x4a\x6b\x58\x76\x43\x06\x0d\x64\xe8\x7f\x1b\xa4\x01\x3c\xb9\xf4\x95\x32\x4e\x4b\x0e\x1b\xd2\x48\x45\xb4\x51\x94\x1d\x5a\x43\x9c\x80\x26\x4c\x90\x57\x50\x25\x35\xac\x23\x20\x5e\x99\x92\x02\x8b\x89\xce\x8a\xbf\x36\xdf\x31\x0e\xdf\x9e\x98\x36\xda\x06\x85\x77\xda\x9c\x47\x9b\x2e\x29\x30\xc6\xd1\x8e\xc1\x76\xc7\x2a\x25\xcd\xb9\x5f\x5a\x5f\xe9\x9b\x84\xbc\xc6\x9b\xcb\x92\x32\x49\x24\x9b\xb2\x22\x5d\xc4\x65\x12\x18\xb3\xe2\x6f\x1a\x3e\xc7\xcf\x5f\xc0\x3c\xf7\x4a\x1a\x35\x68\x26\xc5\x8b\x2d\xa9\x66\x95\xbb\xe9\xc9\x0d\xa9\x99\x46\x07\xc9\x2c\xe0\x02\x65\x0c\x71\xb7\x54\x86\x2b\x2b\x7e\xa6\x5a\xff\xe4\xad\x3e\xc9\x9f\xc3\xda\xdb\x73\xdf\x82\xd0\xa3\x1d\x14\x47\x4d\x83\xe2\x84\xe9\x58\x43\xcb\x33\x69\xcf\x3d\x28\x05\x8d\x4b\x8d\x18\xe6\x2d\x13\x5b\x21\xcd\xba\x2c\x37\x54\x54\xe7\x57\x55\x5e\xad\x50\xcf\x83\x60\x95\xac\x61\x67\xd4\x00\x2f\x36\xea\xf5\x97\x79\x25\xb9\x54\x9c\x89\x23\x5e\x7d\xd7\x3d\x1d\x34\xe0\xa5\xa7\x37\xf5\x2b\xeb\xb5\x1b\x8e\xd6\xcd\x43\xbf\xdd\xe0\x3d\xcf\xa3\x33\x8e\xa2\xc1\x0c\xbd\x75\x56\x0d\x33\x1c\xb6\x1d\x18\x1a\x12\x3d\xfe\xc3\x12\x86\xbc\x9d\xcd\x67\x99\x7c\xdc\x2c\xce\x09\x1d\x4c\x2b\xd5\x3b\xd3\x3d\x73\x67\xf3\x44\x6a\xad\xe0\x08\xe7\x37\xa9\x6a\x7d\x39\x3b\x72\x76\xd6\xe5\xd1\x2c\x98\xc7\x61\xc8\x1b\x12\x13\x67\xa5\x7a\x11\xcf\x54\xf9\xcc\x70\xfb\xb0\x59\x30\x91\xee\x04\x76\x01\xa4\xf8\xaf\xdb\x3c\x9f\xc6\xa1\x64\x7f\xa6\x4a\x4a\x11\x2c\x2e\x95\x54\xcc\xc0\xac\x64\xfa\x42\x08\x18\xc7\x41\xc9\x9f\xf9\x00\x57\x55\x0c\x8a\xcf\x1a\xe2\xc7\x6d\x9e\xc7\xe1\xb5\xf9\x01\x7a\xad\x02\x59\x4a\x55\x83\xda\xd9\x7b\x72\x4f\xee\x93\x18\xa5\x62\xa5\x02\x7a\x9c\x43\x82\xd8\x48\x71\x6d\xce\x1c\xac\xa6\x1d\x8c\x04\x0f\x98\x14\xbf\x33\xfe\x6a\x90\x42\x3a\x84\xe6\x8e\x96\x3b\x66\x28\xfe\xee\xf1\xf8\x7b\xa0\x7d\x27\xa5\x11\xee\xba\xba\x21\x94\x73\xf9\xa6\xe7\x4b\x0b\xa1\x16\xde\x62\x4d\x94\x59\xec\xe5\x01\x64\x07\x46\x5d\x05\xad\x33\x2f\x8f\xc3\x8b\x1b\x25\x32\x56\x10\xd4\x61\xfc\xff\x1b\xd7\xe9\x56\x2a\xd3\x52\x51\xeb\x9d\x6c\x1a\x5f\x10\x7d\xdf\x20\x4d\x0b\x0a\xad\xe8\xa9\x95\x98\x49\xb3\x7f\x58\x03\x76\x69\xab\x81\x57\x5b\x09\x3c\x34\x01\x8e\x3e\x23\x14\x9f\xce\xf9\x05\x39\x5f\x02\xbe\x15\x2a\xec\x25\x3f\x1f\xb8\xd4\x9a\x51\x87\xd6\x02\x7c\x41\x73\x83\x0b\x65\x22\xe0\x9c\x48\x91\xd4\x05\xcf\x43\x2f\x0f\xda\x52\x66\xba\xe0\x60\x65\x22\x5d\x9a\x99\xa5\xdf\x33\x96\x48\x44\x93\x11\xc0\x61\x95\x4c\x37\x53\x50\x53\xb2\x72\x75\x1b\x7b\xe2\x98\x15\x25\x2b\x39\x93\x07\x45\xfb\xf6\xec\xf3\xda\x85\xd6\x51\xb7\x8e\x80\x3b\x94\x7c\x86\xf3\xd5\x73\xca\x84\xa0\x26\x58\x5a\xe6\x0f\xca\x63\x8a\xac\xb3\xf2\x42\xb3\xfb\xd9\x2d\xf5\x2f\xfa\xc4\xa8\x69\x2e\x92\x2b\xca\x45\x46\x47\x7e\xd8\x84\x74\x7d\xe8\x0e\xad\xeb\x92\x95\x0a\xb4\x1c\x54\x05\x36\x4f\xf9\x0b\x18\xbc\xe8\xc8\xb4\x61\x7e\xeb\x16\xdd\x5b\x20\xaf\xce\x4e\xeb\xe4\xb8\x36\x02\xde\x12\xc4\x61\xb1\xbe\x8d\x16\x19\x1a\x8c\x8d\x1b\xbf\xfb\x0b\xd5\x47\xe0\x7c\xe3\x6a\xb6\x8f\x47\xa1\x3b\xca\x79\x61\x02\xba\x77\xd8\x23\x35\xd1\xb2\x43\xcb\x11\xe4\x30\x71\xd8\x76\xb4\x52\x12\x4d\xe6\x57\xc8\xcb\x75\x18\xc4\x01\x17\xab\x90\xe2\xe0\x18\x9b\x52\xca\xa3\xa1\xa5\x46\xa0\xf3\x1d\x3b\xcd\x37\x0e\x5e\x3f\x7e\x2e\xf9\xa0\xe0\xb7\x81\x29\xd0\x13\x97\x04\x45\xb7\x2b\x04\x14\xf9\x97\x90\x2a\x72\xc6\xa2\xa3\x47\xd0\xf4\x15\xf0\x0b\xc4\xab\xf3\xc5\x5b\xba\x58\xb3\xdb\x21\x56\xad\xbd\x0f\xe4\xd3\xe6\xa0\x9a\x86\x71\xbc\xa0\x51\x29\x35\x1c\x8c\x01\x95\x61\xdb\x55\x74\xf4\xf4\xc6\x6a\xd3\xda\x82\x35\x35\xeb\x8a\xef\x99\xf8\x5a\x50\xf3\xb5\x23\x7e\x55\x60\xff\xec\x86\xc9\x08\x73\x7c\x29\x57\x34\x6c\x9c\xd4\xb5\x80\x71\x5e\xeb\xf3\xd4\xaf\x5c\x77\xec\xc7\xe9\x70\xa1\x32\xd0\x9c\x4e\xef\xb0\x3b\xd1\xd9\x0d\x71\x5d\x20\x61\x1d\x3d\x60\xe0\x1b\x22\xa0\x02\xad\xa9\x3a\x6f\x88\x96\xc4\xb4\xd4\x10\xd3\xc2\x99\xbc\x31\xce\x89\x90\x86\xc8\x57\x50\x0d\x97\x6f\x48\x26\x3d\x3d\x40\x76\x43\x3a\xaa\x0e\x4c\x68\x44\x3a\xa1\xef\xdc\x10\x2a\x6a\xc2\x0c\xc2\x20\x6d\x70\x6e\x8f\x37\x09\x02\x43\x23\x9d\x8e\x37\xc5\x0c\x38\x25\x61\x8a\x76\x80\x97\x89\x03\x81\x53\xcf\x59\xc5\x0c\x09\x87\x0e\x13\xa2\x60\xa2\xe2\x43\x0d\x71\x63\x9e\x5d\x94\x36\xc4\xaf\x6c\x43\xee\xee\xee\x5e\xac\x7f\xa9\x38\xc2\x59\xdb\xef\x99\x18\xad\x93\xd9\x4d\x1b\xb2\xf1\xc2\xbb\x39\xa4\x9b\x23\x40\x4f\xb1\x75\x36\x8a\x1a\x26\x2f\x9e\x46\x8e\x7a\x4b\xb5\x2b\xa0\x98\x0a\x37\xe4\x33\x3d\x82\xc3\x26\x7a\x91\xaf\xda\x00\xad\x89\x6c\x48\x2b\x8d\xe3\x7e\x99\x15\x0a\xd2\x6e\xb6\x45\x7c\xf9\xfc\xf1\xc5\x7e\xf1\xb1\x88\x33\x2d\x56\x77\xfb\xc5\xc3\x38\xae\xfa\x4e\xa3\xd8\x11\xe4\x60\x56\x17\x9a\x90\xaa\xa3\x1c\xba\x17\x3b\x70\xe8\xf0\xdc\xd0\x57\xc9\x6a\x84\xda\x25\x87\x4e\x93\x37\x66\x5a\x52\x68\x39\xb8\x12\xde\x02\xad\x41\x05\x6a\x44\xa0\x5f\x66\x45\x5f\x37\x68\x41\x1c\x6a\x68\xbe\xf1\x68\xfd\x53\xa8\x5d\x76\xe5\x35\xaa\x1a\xed\xca\x3d\x26\x6a\x70\xfd\x58\x7c\x62\x5a\x1c\xc4\x9e\x2a\x7d\x64\xfd\x95\x46\x24\xb2\xc6\x6c\xb4\x37\xc4\xd5\x46\xdc\x2e\x0e\xe2\x80\x87\xa5\xa7\xca\x6b\x1e\xed\x7d\x6f\xc6\x35\xcf\xcd\xb4\x7f\xec\x0d\xe9\xf9\xa0\xc9\xc7\xde\x90\x8e\x89\x41\x93\x07\x14\x4e\x60\x7e\x32\x0d\x3a\x50\x07\x10\xd5\x39\xbc\x57\x8d\xf6\xf7\xd0\x39\x10\xd5\x2b\x78\x05\x11\xb2\x79\xe0\x9c\xb8\x57\xad\xac\x08\x6f\x4e\x53\x00\x0c\x66\x09\xde\xbc\xb8\x16\x5f\x48\xa3\x72\x66\xa0\xd3\xd0\x7b\x6f\xaf\x3a\x8b\x0c\x8f\x1d\xc4\xd0\x95\x08\xf7\xab\x50\x56\x9c\x97\x95\x1c\x84\x01\x65\x35\x54\x62\xe8\x6a\xe8\x4d\x3b\xba\x72\x98\x10\x6e\xb1\xe0\x4c\x5f\xa1\x18\xfe\x21\xa9\x82\x7e\x07\xde\xd3\x76\xbf\x4a\xac\xa1\xec\xa9\xa2\xee\x0c\xcd\xfb\x77\x43\x1e\xa1\x86\x06\x03\x40\x50\xe4\x76\x92\x09\xcf\x98\x2d\x7d\x45\xb0\xa9\x30\xf3\x8f\x40\xe2\x32\x10\xb0\x9d\x8a\x49\xb8\x18\x84\xd7\x52\x7b\xdc\x53\x70\x30\x85\xe4\xf5\x2c\x30\x8d\xd6\x87\x63\x62\x8c\xcf\x0f\x2f\x76\x31\x09\x8f\x47\xd1\x95\xf2\x84\x59\x88\x58\xc3\x19\x4d\x17\xf2\x9e\xdd\x85\x4c\xfa\xb1\xb6\x9e\xf2\x26\x07\x52\xe2\x85\x0f\x69\x4c\x6b\xa6\x3c\x76\x8d\x8f\x77\x37\xae\xef\x23\x25\xab\x19\xa1\x9a\x20\x3a\xc0\xdf\xe9\xfe\xa3\x1a\xef\xc5\x4e\xd6\xac\x61\xa0\x09\xdc\x1d\xee\x48\xac\x2b\x08\x28\x1d\x20\x36\x70\xda\xd6\x4c\x6d\x95\xe1\xeb\x87\xc5\xe7\xc7\xa7\x7d\x7c\xa4\x46\xfc\x51\x33\x04\x92\x53\xcf\xb1\x78\x9b\x9e\x98\xf3\x8b\xc6\xff\x84\xb2\x9f\xe0\xd7\x5f\xe1\x49\x1b\x6a\x60\xf7\xb0\x7e\xa8\x7b\xdc\xfb\xa8\x95\x70\x60\xe2\x91\x7c\xf1\x50\x80\xa8\x1f\xc7\xb5\xd8\xfe\x31\x11\xdb\x07\xb1\x7d\x14\x4b\xa1\xcb\xe3\xd3\x7e\x8c\xea\x46\xbb\xd0\x96\x8a\xed\x9f\x1e\xa3\xd8\xde\x8b\xed\x97\xdb\x93\xdd\x10\x0d\x26\xd6\x17\xd2\xb0\xc3\xa0\x80\xf4\x9c\x56\x80\x0a\x30\xb9\x5b\x53\xf6\xd7\x6a\x78\xd3\xeb\xaf\xbd\xbc\x45\x91\x55\xd9\xf4\xb0\xc8\x5d\xaf\xdb\x50\x97\xd6\x48\xc1\xbd\x3f\xb4\xb5\x1a\xb3\x02\x8b\xa4\xc7\xba\x8e\x88\x3e\x3a\x26\xd0\xda\xa6\x1f\xcf\x8f\x3f\x6d\x1e\xbf\x7d\xb1\x39\x7e\x6c\x2b\xf7\xfc\x6c\xf2\x28\x81\x45\xe3\x79\xff\xd3\x66\xff\xad\x7b\x52\x95\x26\x91\x98\x16\x3c\xbd\x24\xa0\x37\x6e\x10\x5e\x0d\xdc\x5f\x4b\xb0\x39\xc2\x2e\xbc\xf0\x03\x9b\xfb\xdf\x7c\xbc\x8a\xaa\xf5\x50\x4e\xaa\xd6\xd7\x62\xe4\xb9\x1d\xc5\xab\x3a\x7c\xdb\x3c\x8e\x56\xca\xfc\xd3\x83\x43\xc4\x6e\xe4\x1f\x13\x22\x35\xbc\x4c\x78\x70\x4d\x0a\x84\x0e\xd3\x63\xc2\xaa\xf4\x68\xc3\xcc\x60\xae\x3a\x35\x31\xa3\x57\x13\xc1\x5b\x4b\x26\xe7\xd3\xf8\xbf\xdb\x2c\x6a\x8a\xb3\xf1\xff\x7c\xcc\x32\x9f\x6c\x36\x9e\xbe\x71\x19\x6f\xcc\x10\xf7\xb1\x5c\x79\xa9\x8d\xa2\x95\xab\xe5\x7e\x7a\xa4\x8c\x59\x1e\x87\xd8\x2b\x8a\x3a\xe5\x4c\x3b\xea\x3d\x77\x39\xb6\x2d\xa1\x91\x0a\x6d\xe5\x4b\x0a\xca\xa5\x0f\xea\x46\x56\xb7\x79\x66\xaf\x3c\x67\x25\xcf\x4e\xcb\x17\x16\x23\xab\xf8\xb4\x11\x87\xa1\xda\x94\x9c\x56\xc7\x8b\x0c\x49\x4b\x8e\x91\x55\xac\x5e\x46\x56\x5b\x5f\xaa\xc6\xac\x70\xd0\x5a\x36\x21\x4f\x75\xb6\x42\x57\xd2\xc5\x04\x8b\xab\x6c\x3c\xde\x5f\xf1\x9b\x99\xef\xcf\x62\x22\x50\xca\xfa\x1c\x12\x7e\xea\x38\xe7\x86\x6f\x6a\xc0\x92\x1e\x30\xee\x93\x23\x49\x79\xdc\xba\xbf\xf0\xa1\x89\xb4\x1c\x60\x87\x8a\x2d\x6e\x6c\xd5\xb6\x73\x36\xfb\x52\xbb\x10\x56\xd0\xbc\x23\x1c\xdc\x8c\xd1\x4a\xdd\xb2\x57\x3a\xc5\x65\x63\xb8\x6c\x32\xc7\xec\x42\xdf\xba\xeb\xed\x15\x13\x66\xa1\xe2\x62\xdd\xcf\xfe\x15\x71\xe9\xe9\xcb\x9c\x67\x51\x73\x9a\x6f\xb4\x31\xa0\xd2\x74\x73\x84\x34\xdb\x5c\xda\xce\xe7\xe1\x3f\x01\x00\x00\xff\xff\xd4\x00\x0b\x92\xe1\x1d\x00\x00")

func complySoc2TemplatesDefaultLatexBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2TemplatesDefaultLatex,
		"comply-soc2/templates/default.latex",
	)
}

func complySoc2TemplatesDefaultLatex() (*asset, error) {
	bytes, err := complySoc2TemplatesDefaultLatexBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/templates/default.latex", size: 7649, mode: os.FileMode(420), modTime: time.Unix(1520547020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2TemplatesIndexAce = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x38\xb8\x0f\x49\xd0\x9a\xee\x9f\x61\x28\xda\xe9\xa1\x4b\x5b\x60\x40\xd1\x04\x6b\xb0\x97\x61\x18\xce\xe4\xd9\x62\x4c\x91\x2a\x79\x52\xe2\xba\xf9\xee\x03\x69\x49\x96\x1d\x3b\x59\x12\x77\x98\x1f\x6c\x8a\xa7\xbb\xdf\xf1\x7e\x47\xde\xd1\x19\x28\x27\x79\x5e\x12\xe4\x5c\x98\x83\xf8\x05\x06\xed\x34\x23\x7b\x00\x90\x13\xaa\x03\x00\x80\x82\x18\x41\xe6\xe8\x03\x71\x56\xf1\x64\xf8\x3a\x4d\xb3\x66\x43\xb0\x58\x88\x33\xef\x2e\x48\xb2\xf8\x8c\x05\x5d\x5f\x27\x99\xd1\x76\x06\x9e\x4c\x36\x08\x3c\x37\x14\x72\x22\x1e\x40\xee\x69\x92\x0d\x72\xe6\x32\xbc\x19\x8d\xa4\xb2\x17\x41\x48\xe3\x2a\x35\x31\xe8\x49\x48\x57\x8c\xf0\x02\xaf\x46\x46\x8f\xc3\x68\x5c\x99\x02\x47\xcf\xc5\xcf\xe2\xe5\x48\x86\xe6\x59\x14\xda\x0a\x19\xc2\x60\xaf\x28\xe1\x12\x59\xe6\x0d\x56\x40\xab\x02\x3b\x4b\x7d\xd9\x3a\x6e\x0a\x88\xc5\x82\xb2\x41\xad\xe9\xb2\x74\x9e\x07\x20\x9d\x65\xb2\x9c\x0d\x2e\xb5\xe2\x3c\x53\x54\x6b\x49\xc3\xf4\xf0\x0c\xb4\xd5\xac\xd1\x0c\x83\x44\x43\xd9\x8b\xa5\x99\x0c\x2e\xb0\xc6\x20\xbd\x2e\x39\x4d\x00\x4c\x2a\x2b\x59\x3b\x0b\x21\x77\x97\x47\x11\xe2\x18\x16\x8d\x0c\xa0\x46\x0f\x9a\xa9\x08\x90\x98\xab\x0a\xb2\x2c\xa6\xc4\x1f\x0c\xc5\x61\xf8\x75\x7e\x62\x30\x84\xc8\xc3\xd1\x21\xbb\x72\x68\xb1\x3e\x3c\xee\xd4\x27\xce\xc3\x51\xb2\x91\x3d\x7f\x0b\xfa\x97\x64\x4a\x18\xb2\x53\xce\xdf\x82\x7e\xfa\xb4\x8f\xb5\x42\x83\x6c\x09\xfa\xa7\xfe\xab\x27\xd5\x13\x38\x8a\xd3\x82\x71\x1a\x01\x21\xcb\x32\x18\x7c\xfa\x6d\xb0\x6e\x04\x60\x34\x02\x8b\xb5\x9e\x62\x5a\x17\xe3\x38\xac\x89\x3b\x3b\x32\xba\xfe\x49\x07\x16\x31\x92\xa8\x6d\x58\xae\x7f\xd3\x1e\xc0\xc6\xeb\xa8\xd4\xd1\xa1\x0e\x43\x94\xac\x6b\xea\xad\x37\x7e\xae\x81\x4c\xa0\xbb\x4c\x78\x2a\x5c\x4d\xb7\x58\x39\xb8\xc3\xe2\x68\x04\x81\x12\x73\x3b\x56\xa7\x55\x0a\xd0\x26\xa3\x77\x79\x93\x6b\xa5\xc8\x3e\x68\x4d\x6d\x58\xb6\x9b\x38\xd8\x36\x6e\x47\xf1\x77\xec\xd4\x3c\x3d\x36\xeb\x12\x39\x79\x27\x74\x18\x96\x5e\x17\xe8\xe7\x71\x18\x0a\x34\xa6\xd1\x49\xf2\x61\xa7\x95\xa6\x1a\x22\xc9\xf7\xd0\xf2\x17\xe2\xb6\x83\x63\xf9\x29\x45\xa8\xc6\xcb\xd7\xce\x9c\xd1\x72\xfe\x0c\xce\xbc\x93\x14\xc2\x33\x40\xab\xe0\x5d\xa5\x34\xc3\x17\x46\xae\xc2\x1a\xfe\xc4\x39\xee\xec\x58\xac\x45\xcc\xb7\xe8\xea\xd8\x5d\x91\x8a\x83\x49\x65\x4c\xda\x94\x3d\xb8\xad\x8e\x02\x54\x66\x23\xc2\x46\x8b\x66\x57\x09\x57\x93\x8f\x7b\x7f\xe3\x0d\x00\x04\x67\xa5\xd1\x72\x96\x0d\x56\xbb\xfb\x4d\xda\xce\x87\xad\xd2\xe1\xf1\x00\x4e\xb7\x1b\xe8\x41\x58\xf4\x1e\x63\x32\x86\x7b\x81\xac\xd4\x22\xcc\xe7\x5d\x46\x7a\x40\x65\x0c\xb1\xbe\x27\x4c\xab\x14\x41\xce\xb6\x1b\xe8\x43\x44\xf6\x54\xe5\xef\x0b\xd2\xa9\x25\x98\x5d\x46\x7a\x40\x54\x6b\x45\x56\xd2\xbd\x60\x5a\xa5\x08\xf2\xa1\x19\xc3\x1f\x58\x99\x65\x2e\x3d\x69\x79\x13\xed\x5e\x68\xd1\xba\xbc\x11\xcd\xe9\xdf\xc0\x8e\x8d\x93\xb3\xaf\x95\xe3\x95\x1f\xf9\x2b\x38\xcf\x75\x80\xa0\x99\x62\xad\x08\xce\x68\x85\x4c\x01\xd0\x98\xee\x34\x0f\x29\xbd\x5b\x7f\x62\x6d\x43\x26\x05\xec\x80\xf3\xdd\x5b\x26\x6f\xf3\x56\x48\x67\xaa\xc2\xa6\x8c\xaf\x25\x59\x26\x4f\xaa\xbf\x1f\xa3\x34\x0a\x9d\xa5\x21\xe7\xda\xab\x5e\x9c\x94\xae\xd7\xa2\xb6\xda\x84\x51\xe3\x95\xc8\x31\x0c\x99\xae\x78\xd8\x1a\x86\x13\x67\xd9\x3b\x03\xe7\x1e\xe5\x4c\xdb\xe9\x0d\xa4\x1b\x2a\xb7\xc2\xc5\x86\x43\xdb\x29\x7c\x41\xd6\x61\xa2\x57\x00\x61\xe3\xc5\xe4\xd4\xc1\x26\xbf\x8b\x85\x88\x27\x42\x10\xad\x56\x67\xa7\x77\xb6\x3c\xce\xb3\x73\xc7\x68\x1e\xe9\x55\xb2\xd1\x79\xf4\x1f\x33\xd6\x9c\xa2\xfb\x66\xec\x5d\x2a\x9a\x70\xae\xe5\x8c\xf8\x9e\x71\x69\x5c\x3a\x2d\xc9\xee\x8d\xa7\x53\xa3\x28\x70\xe3\xcf\xc3\xdc\x49\x16\xde\xe3\x3c\x5c\x5f\x83\xc2\x79\xd8\x13\x5f\xb7\x2e\xe8\x06\x83\x4d\xa1\xdb\x33\x5b\x31\xd4\xf0\x3b\x7d\xad\x28\xdc\x97\xac\xe4\xcf\x5e\xa9\x5a\x6e\xa9\x47\x78\xb3\xb7\xfd\xd4\x13\xf2\xa5\x5b\x0a\xc3\xad\xab\x2a\xbd\x9b\x7a\x0a\x41\x74\x83\x55\x7f\x04\x35\x9a\x8a\xb2\x75\x5f\x4f\x8c\x0b\xf1\x38\x82\x02\xaf\xb2\xdd\xcb\x78\xb2\xaa\xe1\x8f\x2b\x39\x7d\x5f\xd7\xc2\x18\xd8\x3b\x3b\xdd\xd5\x1d\x7c\x8f\x2b\x8b\x35\x08\xd0\x42\x5b\xfc\xc0\x4d\x52\x11\x72\x7e\x8a\x56\x7f\x5b\xb6\xf3\xb1\x5a\xc5\x49\xe9\x8a\xd2\x68\x8c\x35\x8b\x6c\xad\xbd\xb3\xe9\x6e\xd2\x58\x65\x1c\x1b\x12\xcb\xef\xd8\x36\xea\x6f\x34\xfc\xa9\x43\xe4\xee\xa2\xd9\x3c\xaf\x77\x61\x9c\x43\x2c\x76\x9b\x73\x67\xef\x3f\xae\x2c\xac\xb5\x9d\x00\x8b\x85\x47\x3b\x25\x10\xab\xf5\xc1\x5a\x7f\xb9\x09\xa1\x62\x4e\xdd\xe8\x42\xa3\xe0\x46\xf2\xa5\xdb\xe5\x62\x21\x4e\x2b\x2e\x2b\xfe\xa8\x0d\xd9\xa4\x07\x8c\x7e\x4a\x9c\xfd\x3d\x36\x68\x67\x37\xda\x8f\x2d\x1a\x6b\x0e\x93\x6d\xab\xd4\x93\xb6\xb3\xfa\xb1\xd4\x6f\xed\xd9\xbe\xc3\x34\xd2\x6d\x13\xa7\x63\xca\xb1\xd6\xce\x47\xe2\x7b\x9d\xc7\x69\x8f\xff\x65\xc8\x80\x8a\xd2\xb8\x39\xd1\xb2\x7b\x89\xce\x79\x94\xec\x7c\xf8\x91\x09\xf0\x4e\x7a\x67\xe7\xc5\x83\xf2\xa2\x5d\xfc\x43\xb3\x22\x0a\x1a\xfc\xff\x45\xc6\x74\x8d\xf1\x0f\xce\x99\xed\x0d\x78\x3c\x2e\x28\x36\xd4\x63\x82\x50\x92\xd4\x13\x2d\x21\x30\x95\x01\x38\x47\x06\xf4\x04\x8c\x33\xb2\xa0\x2d\x78\x0a\xa5\xb3\x81\x62\x4f\x3b\xa3\x39\x50\x1d\xdb\xde\x3d\x25\x8a\xd8\x9a\x29\x5f\x72\xe7\x59\x3a\x75\x53\x20\x73\x52\x95\x21\x38\x8a\x5c\xc2\xc4\xf9\x02\xf9\xf8\x5f\xa4\x4f\x17\x87\xc7\x24\xd0\x89\x53\x3b\x04\xde\xd9\xdd\x64\xb7\x97\x83\x4d\xaa\x9b\xf7\xcb\x2d\x5d\x5f\x77\xa7\x99\x3a\x0a\x90\x93\x5f\x46\x22\x5e\x96\xc9\x8b\xe5\xcf\xaa\x7e\x6e\x5e\x85\xdb\xcc\xb9\xbd\x14\xde\x71\x44\x9c\x38\x3b\x89\x4e\xb0\x46\x03\x2f\x9f\xbf\x78\x7d\xb0\xe5\xff\xaf\xd1\x28\x16\x92\x58\x39\x48\xa5\x7f\xab\x14\xd5\x64\x5c\x59\xb4\x79\xbb\x79\x8d\xfe\x27\x00\x00\xff\xff\x65\x1e\x07\x12\xc1\x14\x00\x00")

func complySoc2TemplatesIndexAceBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2TemplatesIndexAce,
		"comply-soc2/templates/index.ace",
	)
}

func complySoc2TemplatesIndexAce() (*asset, error) {
	bytes, err := complySoc2TemplatesIndexAceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/templates/index.ace", size: 5313, mode: os.FileMode(420), modTime: time.Unix(1521586173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".DS_Store": Ds_store,
	"comply-blank/README.md": complyBlankReadmeMd,
	"comply-soc2/.DS_Store": complySoc2Ds_store,
	"comply-soc2/README.md": complySoc2ReadmeMd,
	"comply-soc2/narratives/README.md": complySoc2NarrativesReadmeMd,
	"comply-soc2/narratives/organizational.md": complySoc2NarrativesOrganizationalMd,
	"comply-soc2/policies/README.md": complySoc2PoliciesReadmeMd,
	"comply-soc2/policies/application.md": complySoc2PoliciesApplicationMd,
	"comply-soc2/policies/information.md": complySoc2PoliciesInformationMd,
	"comply-soc2/policies/training.md": complySoc2PoliciesTrainingMd,
	"comply-soc2/procedures/README.md": complySoc2ProceduresReadmeMd,
	"comply-soc2/procedures/offboarding.md": complySoc2ProceduresOffboardingMd,
	"comply-soc2/procedures/onboarding.md": complySoc2ProceduresOnboardingMd,
	"comply-soc2/procedures/workstation.md": complySoc2ProceduresWorkstationMd,
	"comply-soc2/standards/README.md": complySoc2StandardsReadmeMd,
	"comply-soc2/standards/TSPC-2017.yml": complySoc2StandardsTspc2017Yml,
	"comply-soc2/templates/default.latex": complySoc2TemplatesDefaultLatex,
	"comply-soc2/templates/index.ace": complySoc2TemplatesIndexAce,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".DS_Store": &bintree{Ds_store, map[string]*bintree{}},
	"comply-blank": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{complyBlankReadmeMd, map[string]*bintree{}},
	}},
	"comply-soc2": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{complySoc2Ds_store, map[string]*bintree{}},
		"README.md": &bintree{complySoc2ReadmeMd, map[string]*bintree{}},
		"narratives": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2NarrativesReadmeMd, map[string]*bintree{}},
			"organizational.md": &bintree{complySoc2NarrativesOrganizationalMd, map[string]*bintree{}},
		}},
		"policies": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2PoliciesReadmeMd, map[string]*bintree{}},
			"application.md": &bintree{complySoc2PoliciesApplicationMd, map[string]*bintree{}},
			"information.md": &bintree{complySoc2PoliciesInformationMd, map[string]*bintree{}},
			"training.md": &bintree{complySoc2PoliciesTrainingMd, map[string]*bintree{}},
		}},
		"procedures": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2ProceduresReadmeMd, map[string]*bintree{}},
			"offboarding.md": &bintree{complySoc2ProceduresOffboardingMd, map[string]*bintree{}},
			"onboarding.md": &bintree{complySoc2ProceduresOnboardingMd, map[string]*bintree{}},
			"workstation.md": &bintree{complySoc2ProceduresWorkstationMd, map[string]*bintree{}},
		}},
		"standards": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2StandardsReadmeMd, map[string]*bintree{}},
			"TSPC-2017.yml": &bintree{complySoc2StandardsTspc2017Yml, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"default.latex": &bintree{complySoc2TemplatesDefaultLatex, map[string]*bintree{}},
			"index.ace": &bintree{complySoc2TemplatesIndexAce, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
